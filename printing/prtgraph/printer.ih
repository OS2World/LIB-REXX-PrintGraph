
/*
 * This file was generated by the SOM Compiler.
 * FileName: printer.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef printer_ih
#define printer_ih


#include "printer.h"

static void VRPrintersomInitializeClass ( void);
static void M_VRPrintersomInitializeClass ( void);
/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

/*
 * Passthru lines: File: "C.ih", "after"
 */

#include "vxrexx.h"


#ifndef SOM_CurrentClass
#define SOM_CurrentClass VRPrinterCClassData.parentMtab
#endif

#define VRPrinter_MaxNoMethods 89

/*
 * Instance data
 */
typedef struct {
    char pszColor[32];
    PJOB_TYPE hPrt;
} VRPrinterData;

/*
 * Instance variable access macros
 */
#define _pszColor (somThis->pszColor)
#define _hPrt (somThis->hPrt)

/*
 * Getdata macro
 */
#define VRPrinterGetData(somSelf) \
    ((VRPrinterData *) \
        SOM_DataResolve(somSelf, VRPrinterCClassData.instanceDataToken))

/*
 * Trace/Debug macro
 */
#ifndef VRPrinterMethodDebug
#define VRPrinterMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef VRPrinter_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_VRPrinterCClassData.parentMtab
#undef SOMInstance
#define SOMInstance VRPrinterCClassData.parentMtab

#ifndef M_VRPrinter_Class_Source
#define M_VRPrinter_Class_Source
#endif    /* M_VRPrinter_Class_Source */

/*
 * Generate the Apply Stubs.
 */
#pragma linkage(somAP_vrStemFetchLong, system)
static ULONG   SOMLINK somAP_vrStemFetchLong(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ pszStem = va_arg(__ap, PSZ);
    ULONG index = va_arg(__ap, ULONG);
    PBOOL pOk = va_arg(__ap, PBOOL);

    return (VRPrinter_vrStemFetchLong(somSelf,pszStem,index,pOk));
}

#pragma linkage(somAP_vrStemFetchString, system)
static PSZ   SOMLINK somAP_vrStemFetchString(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ pszStem = va_arg(__ap, PSZ);
    ULONG index = va_arg(__ap, ULONG);
    PBOOL pOk = va_arg(__ap, PBOOL);

    return (VRPrinter_vrStemFetchString(somSelf,pszStem,index,pOk));
}

#pragma linkage(somAP_vrStemSetValue, system)
static BOOL   SOMLINK somAP_vrStemSetValue(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ pszStem = va_arg(__ap, PSZ);
    ULONG index = va_arg(__ap, ULONG);
    PSZ pszValue = va_arg(__ap, PSZ);

    return (VRPrinter_vrStemSetValue(somSelf,pszStem,index,pszValue));
}

#pragma linkage(somAP_vrStemSetValueLong, system)
static BOOL   SOMLINK somAP_vrStemSetValueLong(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ pszStem = va_arg(__ap, PSZ);
    ULONG index = va_arg(__ap, ULONG);
    ULONG ulValue = va_arg(__ap, ULONG);

    return (VRPrinter_vrStemSetValueLong(somSelf,pszStem,index,ulValue));
}

#pragma linkage(somAP_vrGet_LeftMargin, system)
static bool   SOMLINK somAP_vrGet_LeftMargin(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_LeftMargin(somSelf,val));
}

#pragma linkage(somAP_vrGet_RightMargin, system)
static bool   SOMLINK somAP_vrGet_RightMargin(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_RightMargin(somSelf,val));
}

#pragma linkage(somAP_vrGet_TopMargin, system)
static bool   SOMLINK somAP_vrGet_TopMargin(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_TopMargin(somSelf,val));
}

#pragma linkage(somAP_vrGet_BottomMargin, system)
static bool   SOMLINK somAP_vrGet_BottomMargin(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_BottomMargin(somSelf,val));
}

#pragma linkage(somAP_vrGet_PageWidth, system)
static bool   SOMLINK somAP_vrGet_PageWidth(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_PageWidth(somSelf,val));
}

#pragma linkage(somAP_vrGet_PageHeight, system)
static bool   SOMLINK somAP_vrGet_PageHeight(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_PageHeight(somSelf,val));
}

#pragma linkage(somAP_vrGet_Printing, system)
static bool   SOMLINK somAP_vrGet_Printing(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    BOOL *on = va_arg(__ap, BOOL*);

    return (VRPrinter_vrGet_Printing(somSelf,on));
}

#pragma linkage(somAP_vrGet_CurrentPrinter, system)
static bool   SOMLINK somAP_vrGet_CurrentPrinter(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ *str = va_arg(__ap, PSZ*);

    return (VRPrinter_vrGet_CurrentPrinter(somSelf,str));
}

#pragma linkage(somAP_vrGet_CurrentDevice, system)
static bool   SOMLINK somAP_vrGet_CurrentDevice(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ *str = va_arg(__ap, PSZ*);

    return (VRPrinter_vrGet_CurrentDevice(somSelf,str));
}

#pragma linkage(somAP_vrSet_LineSpace, system)
static bool   SOMLINK somAP_vrSet_LineSpace(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    ULONG val = va_arg(__ap, ULONG);

    return (VRPrinter_vrSet_LineSpace(somSelf,val));
}

#pragma linkage(somAP_vrGet_LineSpace, system)
static bool   SOMLINK somAP_vrGet_LineSpace(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_LineSpace(somSelf,val));
}

#pragma linkage(somAP_vrGet_Version, system)
static bool   SOMLINK somAP_vrGet_Version(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ *str = va_arg(__ap, PSZ*);

    return (VRPrinter_vrGet_Version(somSelf,str));
}

#pragma linkage(somAP_vrSet_PrintColor, system)
static bool   SOMLINK somAP_vrSet_PrintColor(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ str = va_arg(__ap, PSZ);

    return (VRPrinter_vrSet_PrintColor(somSelf,str));
}

#pragma linkage(somAP_vrGet_PrintColor, system)
static bool   SOMLINK somAP_vrGet_PrintColor(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ *str = va_arg(__ap, PSZ*);

    return (VRPrinter_vrGet_PrintColor(somSelf,str));
}

#pragma linkage(somAP_vrSet_ColorEnabled, system)
static bool   SOMLINK somAP_vrSet_ColorEnabled(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    BOOL on = va_arg(__ap, BOOL);

    return (VRPrinter_vrSet_ColorEnabled(somSelf,on));
}

#pragma linkage(somAP_vrGet_ColorEnabled, system)
static bool   SOMLINK somAP_vrGet_ColorEnabled(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    BOOL *on = va_arg(__ap, BOOL*);

    return (VRPrinter_vrGet_ColorEnabled(somSelf,on));
}

#pragma linkage(somAP_vrSet_Measures, system)
static bool   SOMLINK somAP_vrSet_Measures(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ str = va_arg(__ap, PSZ);

    return (VRPrinter_vrSet_Measures(somSelf,str));
}

#pragma linkage(somAP_vrGet_Measures, system)
static bool   SOMLINK somAP_vrGet_Measures(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ *str = va_arg(__ap, PSZ*);

    return (VRPrinter_vrGet_Measures(somSelf,str));
}

#pragma linkage(somAP_vrGet_PageNum, system)
static bool   SOMLINK somAP_vrGet_PageNum(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_PageNum(somSelf,val));
}

#pragma linkage(somAP_vrGet_JobName, system)
static bool   SOMLINK somAP_vrGet_JobName(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ *str = va_arg(__ap, PSZ*);

    return (VRPrinter_vrGet_JobName(somSelf,str));
}

#pragma linkage(somAP_vrGet_DefaultPrinter, system)
static bool   SOMLINK somAP_vrGet_DefaultPrinter(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ *str = va_arg(__ap, PSZ*);

    return (VRPrinter_vrGet_DefaultPrinter(somSelf,str));
}

#pragma linkage(somAP_vrGet_MinLeftMar, system)
static bool   SOMLINK somAP_vrGet_MinLeftMar(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_MinLeftMar(somSelf,val));
}

#pragma linkage(somAP_vrGet_MinRightMar, system)
static bool   SOMLINK somAP_vrGet_MinRightMar(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_MinRightMar(somSelf,val));
}

#pragma linkage(somAP_vrGet_MinTopMar, system)
static bool   SOMLINK somAP_vrGet_MinTopMar(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_MinTopMar(somSelf,val));
}

#pragma linkage(somAP_vrGet_MinBottomMar, system)
static bool   SOMLINK somAP_vrGet_MinBottomMar(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_MinBottomMar(somSelf,val));
}

#pragma linkage(somAP_vrGet_FormName, system)
static bool   SOMLINK somAP_vrGet_FormName(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PSZ *str = va_arg(__ap, PSZ*);

    return (VRPrinter_vrGet_FormName(somSelf,str));
}

#pragma linkage(somAP_vrGet_FormWidth, system)
static bool   SOMLINK somAP_vrGet_FormWidth(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_FormWidth(somSelf,val));
}

#pragma linkage(somAP_vrGet_FormHeight, system)
static bool   SOMLINK somAP_vrGet_FormHeight(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_FormHeight(somSelf,val));
}

#pragma linkage(somAP_vrSet_ShowProgress, system)
static bool   SOMLINK somAP_vrSet_ShowProgress(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    BOOL on = va_arg(__ap, BOOL);

    return (VRPrinter_vrSet_ShowProgress(somSelf,on));
}

#pragma linkage(somAP_vrGet_ShowProgress, system)
static bool   SOMLINK somAP_vrGet_ShowProgress(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    BOOL *on = va_arg(__ap, BOOL*);

    return (VRPrinter_vrGet_ShowProgress(somSelf,on));
}

#pragma linkage(somAP_vrGet_XPos, system)
static bool   SOMLINK somAP_vrGet_XPos(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_XPos(somSelf,val));
}

#pragma linkage(somAP_vrGet_YPos, system)
static bool   SOMLINK somAP_vrGet_YPos(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_YPos(somSelf,val));
}

#pragma linkage(somAP_vrGet_XposTwips, system)
static bool   SOMLINK somAP_vrGet_XposTwips(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_XposTwips(somSelf,val));
}

#pragma linkage(somAP_vrGet_YposTwips, system)
static bool   SOMLINK somAP_vrGet_YposTwips(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    PULONG val = va_arg(__ap, PULONG);

    return (VRPrinter_vrGet_YposTwips(somSelf,val));
}

#define VRPrinter_RXMethod_stubD 1
#pragma linkage(VRPrinter_RXMethod_stub, system)
SOMEXTERN bool   SOMLINK VRPrinter_RXMethod_stub(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    LONG argc = va_arg(__ap, LONG);
    PRXSTRING argv = va_arg(__ap, PRXSTRING);
    PLONG argsused = va_arg(__ap, PLONG);
    PRXSTRING retstr = va_arg(__ap, PRXSTRING);
    PVRMETHEXTRA rxdata = va_arg(__ap, PVRMETHEXTRA);

    return ((somTD_VRPrinter_vrRXMethod_ClosePrintJob) _somFindSMethodOk
        (SOM_GetClass(somSelf), __id))
            (somSelf,argc,argv,argsused,retstr,rxdata);
}

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_DefineTable" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_EndRow" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_EndTable" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_GoTo" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_JobProperties" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintJustified" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintCentered" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintRight" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintLeft" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintLine" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintBox" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintBitmap" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintFile" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_StartCol" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_StartRow" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_StartTable" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_SetHeader" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_SetHeaderMode" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_SetFooter" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_SetMargins" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_SetPrinter" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrinterDialog" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_FontDialog" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_OpenPrintJob" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_NewPage" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrinterList" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_Tab" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_SetHeaderLineFont" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintObjectImage" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_ResetColHeader" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_ResetHeader" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_AbortPrintJob" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_BlockFits" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_LineFits" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_SetProgressTexts" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_MoveX" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_MoveY" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintWinImage" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_LoadResMod" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_FreeResMod" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintJPEG" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_StringLength" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_GotoX" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_GotoY" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_GotoTab" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_DrawLine" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_PrintBullet" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_SaveJobProps" */

/* Using "VRPrinter_RXMethod_stub" apply stub for method "vrRXMethod_ReadJobProps" */

#define VRPrinter_WM_stubD 1
#pragma linkage(VRPrinter_WM_stub, system)
SOMEXTERN MRESULT   SOMLINK VRPrinter_WM_stub(VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    HWND hWnd = va_arg(__ap, HWND);
    ULONG msg = va_arg(__ap, ULONG);
    MPARAM mp1 = va_arg(__ap, MPARAM);
    MPARAM mp2 = va_arg(__ap, MPARAM);

    return ((somTD_VRPrinter_vrWM_INITCAP) _somFindSMethodOk
        (SOM_GetClass(somSelf), __id))
            (somSelf,hWnd,msg,mp1,mp2);
}


/*
 * Generate dummy external for those stubs that are not declared in this file.
 */

/*
 * Overridden method: somInit
 */
#pragma linkage(VRPrinterInstance_somInit, system)
SOM_Scope void   SOMLINK VRPrinterInstance_somInit(VRPrinter *somSelf);
#ifndef parent_somInit
static char *somMN_somInit = "somInit";
static somId somId_somInit = &somMN_somInit;
#define parent_somInit(somSelf) \
    ((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somInit)) \
     (somSelf))
#endif
#define VRPrinterParent_somInit parent_somInit

/*
 * Overridden method: somUninit
 */
#pragma linkage(VRPrinterInstance_somUninit, system)
SOM_Scope void   SOMLINK VRPrinterInstance_somUninit(VRPrinter *somSelf);
#ifndef parent_somUninit
static char *somMN_somUninit = "somUninit";
static somId somId_somUninit = &somMN_somUninit;
#define parent_somUninit(somSelf) \
    ((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somUninit)) \
     (somSelf))
#endif
#define VRPrinterParent_somUninit parent_somUninit

/*
 * Overridden method: vrLocalCreateWindow
 */
#pragma linkage(VRPrinterInstance_vrLocalCreateWindow, system)
SOM_Scope HWND   SOMLINK VRPrinterInstance_vrLocalCreateWindow(VRPrinter *somSelf,
        PBOOL visible);
#ifndef parent_vrLocalCreateWindow
static char *somMN_vrLocalCreateWindow = "vrLocalCreateWindow";
static somId somId_vrLocalCreateWindow = &somMN_vrLocalCreateWindow;
#define parent_vrLocalCreateWindow(somSelf,visible) \
    ((SOM_ParentResolveE(VRCore, SOM_CurrentClass, vrLocalCreateWindow)) \
     (somSelf,visible))
#endif
#define VRPrinterParent_vrLocalCreateWindow parent_vrLocalCreateWindow

/*
 * Overridden method: vrSet_WordBreak
 */
#pragma linkage(VRPrinterInstance_vrSet_WordBreak, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrSet_WordBreak(VRPrinter *somSelf,
        BOOL on);
#ifndef parent_vrSet_WordBreak
static char *somMN_vrSet_WordBreak = "vrSet_WordBreak";
static somId somId_vrSet_WordBreak = &somMN_vrSet_WordBreak;
#define parent_vrSet_WordBreak(somSelf,on) \
    ((SOM_ParentResolveE(VRDescriptiveText, SOM_CurrentClass, vrSet_WordBreak)) \
     (somSelf,on))
#endif
#define VRPrinterParent_vrSet_WordBreak parent_vrSet_WordBreak

/*
 * Overridden method: vrGet_WordBreak
 */
#pragma linkage(VRPrinterInstance_vrGet_WordBreak, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_WordBreak(VRPrinter *somSelf,
        BOOL *on);
#ifndef parent_vrGet_WordBreak
static char *somMN_vrGet_WordBreak = "vrGet_WordBreak";
static somId somId_vrGet_WordBreak = &somMN_vrGet_WordBreak;
#define parent_vrGet_WordBreak(somSelf,on) \
    ((SOM_ParentResolveE(VRDescriptiveText, SOM_CurrentClass, vrGet_WordBreak)) \
     (somSelf,on))
#endif
#define VRPrinterParent_vrGet_WordBreak parent_vrGet_WordBreak

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure VRPrintertempClassData;

/*
 * Initialize the class data structure
 */
struct VRPrinterClassDataStructure VRPrinterClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct VRPrinterCClassDataStructure VRPrinterCClassData = {(somMethodTab *) NULL};

/*
 * New Method: vrStemFetchLong
 */
#pragma linkage(VRPrinterInstance_vrStemFetchLong, system)
SOM_Scope ULONG   SOMLINK VRPrinterInstance_vrStemFetchLong(VRPrinter *somSelf,
        PSZ pszStem,
        ULONG index,
        PBOOL pOk);
static char *somMN_vrStemFetchLong = "vrStemFetchLong";
static somId somId_vrStemFetchLong = &somMN_vrStemFetchLong;
static char *somDS_vrStemFetchLong = somMD_VRPrinter_vrStemFetchLong;
static somId somDI_vrStemFetchLong = &somDS_vrStemFetchLong;
#pragma linkage(somRD_vrStemFetchLong, system)
static ULONG   SOMLINK somRD_vrStemFetchLong(VRPrinter *somSelf,
        PSZ pszStem,
        ULONG index,
        PBOOL pOk)
{
    return ((ULONG) va_somDispatchL(somSelf, somId_vrStemFetchLong,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrStemFetchLong),pszStem,index,pOk));
}

/*
 * New Method: vrStemFetchString
 */
#pragma linkage(VRPrinterInstance_vrStemFetchString, system)
SOM_Scope PSZ   SOMLINK VRPrinterInstance_vrStemFetchString(VRPrinter *somSelf,
        PSZ pszStem,
        ULONG index,
        PBOOL pOk);
static char *somMN_vrStemFetchString = "vrStemFetchString";
static somId somId_vrStemFetchString = &somMN_vrStemFetchString;
static char *somDS_vrStemFetchString = somMD_VRPrinter_vrStemFetchString;
static somId somDI_vrStemFetchString = &somDS_vrStemFetchString;
#pragma linkage(somRD_vrStemFetchString, system)
static PSZ   SOMLINK somRD_vrStemFetchString(VRPrinter *somSelf,
        PSZ pszStem,
        ULONG index,
        PBOOL pOk)
{
    return ((PSZ) va_somDispatchL(somSelf, somId_vrStemFetchString,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrStemFetchString),pszStem,index,pOk));
}

/*
 * New Method: vrStemSetValue
 */
#pragma linkage(VRPrinterInstance_vrStemSetValue, system)
SOM_Scope BOOL   SOMLINK VRPrinterInstance_vrStemSetValue(VRPrinter *somSelf,
        PSZ pszStem,
        ULONG index,
        PSZ pszValue);
static char *somMN_vrStemSetValue = "vrStemSetValue";
static somId somId_vrStemSetValue = &somMN_vrStemSetValue;
static char *somDS_vrStemSetValue = somMD_VRPrinter_vrStemSetValue;
static somId somDI_vrStemSetValue = &somDS_vrStemSetValue;
#pragma linkage(somRD_vrStemSetValue, system)
static BOOL   SOMLINK somRD_vrStemSetValue(VRPrinter *somSelf,
        PSZ pszStem,
        ULONG index,
        PSZ pszValue)
{
    return ((BOOL) va_somDispatchL(somSelf, somId_vrStemSetValue,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrStemSetValue),pszStem,index,pszValue));
}

/*
 * New Method: vrStemSetValueLong
 */
#pragma linkage(VRPrinterInstance_vrStemSetValueLong, system)
SOM_Scope BOOL   SOMLINK VRPrinterInstance_vrStemSetValueLong(VRPrinter *somSelf,
        PSZ pszStem,
        ULONG index,
        ULONG ulValue);
static char *somMN_vrStemSetValueLong = "vrStemSetValueLong";
static somId somId_vrStemSetValueLong = &somMN_vrStemSetValueLong;
static char *somDS_vrStemSetValueLong = somMD_VRPrinter_vrStemSetValueLong;
static somId somDI_vrStemSetValueLong = &somDS_vrStemSetValueLong;
#pragma linkage(somRD_vrStemSetValueLong, system)
static BOOL   SOMLINK somRD_vrStemSetValueLong(VRPrinter *somSelf,
        PSZ pszStem,
        ULONG index,
        ULONG ulValue)
{
    return ((BOOL) va_somDispatchL(somSelf, somId_vrStemSetValueLong,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrStemSetValueLong),pszStem,index,ulValue));
}

/*
 * New Method: vrGet_LeftMargin
 */
#pragma linkage(VRPrinterInstance_vrGet_LeftMargin, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_LeftMargin(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_LeftMargin = "vrGet_LeftMargin";
static somId somId_vrGet_LeftMargin = &somMN_vrGet_LeftMargin;
static char *somDS_vrGet_LeftMargin = somMD_VRPrinter_vrGet_LeftMargin;
static somId somDI_vrGet_LeftMargin = &somDS_vrGet_LeftMargin;
#pragma linkage(somRD_vrGet_LeftMargin, system)
static bool   SOMLINK somRD_vrGet_LeftMargin(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_LeftMargin,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_LeftMargin),val));
}

/*
 * New Method: vrGet_RightMargin
 */
#pragma linkage(VRPrinterInstance_vrGet_RightMargin, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_RightMargin(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_RightMargin = "vrGet_RightMargin";
static somId somId_vrGet_RightMargin = &somMN_vrGet_RightMargin;
static char *somDS_vrGet_RightMargin = somMD_VRPrinter_vrGet_RightMargin;
static somId somDI_vrGet_RightMargin = &somDS_vrGet_RightMargin;
#pragma linkage(somRD_vrGet_RightMargin, system)
static bool   SOMLINK somRD_vrGet_RightMargin(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_RightMargin,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_RightMargin),val));
}

/*
 * New Method: vrGet_TopMargin
 */
#pragma linkage(VRPrinterInstance_vrGet_TopMargin, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_TopMargin(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_TopMargin = "vrGet_TopMargin";
static somId somId_vrGet_TopMargin = &somMN_vrGet_TopMargin;
static char *somDS_vrGet_TopMargin = somMD_VRPrinter_vrGet_TopMargin;
static somId somDI_vrGet_TopMargin = &somDS_vrGet_TopMargin;
#pragma linkage(somRD_vrGet_TopMargin, system)
static bool   SOMLINK somRD_vrGet_TopMargin(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_TopMargin,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_TopMargin),val));
}

/*
 * New Method: vrGet_BottomMargin
 */
#pragma linkage(VRPrinterInstance_vrGet_BottomMargin, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_BottomMargin(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_BottomMargin = "vrGet_BottomMargin";
static somId somId_vrGet_BottomMargin = &somMN_vrGet_BottomMargin;
static char *somDS_vrGet_BottomMargin = somMD_VRPrinter_vrGet_BottomMargin;
static somId somDI_vrGet_BottomMargin = &somDS_vrGet_BottomMargin;
#pragma linkage(somRD_vrGet_BottomMargin, system)
static bool   SOMLINK somRD_vrGet_BottomMargin(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_BottomMargin,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_BottomMargin),val));
}

/*
 * New Method: vrGet_PageWidth
 */
#pragma linkage(VRPrinterInstance_vrGet_PageWidth, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_PageWidth(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_PageWidth = "vrGet_PageWidth";
static somId somId_vrGet_PageWidth = &somMN_vrGet_PageWidth;
static char *somDS_vrGet_PageWidth = somMD_VRPrinter_vrGet_PageWidth;
static somId somDI_vrGet_PageWidth = &somDS_vrGet_PageWidth;
#pragma linkage(somRD_vrGet_PageWidth, system)
static bool   SOMLINK somRD_vrGet_PageWidth(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_PageWidth,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_PageWidth),val));
}

/*
 * New Method: vrGet_PageHeight
 */
#pragma linkage(VRPrinterInstance_vrGet_PageHeight, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_PageHeight(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_PageHeight = "vrGet_PageHeight";
static somId somId_vrGet_PageHeight = &somMN_vrGet_PageHeight;
static char *somDS_vrGet_PageHeight = somMD_VRPrinter_vrGet_PageHeight;
static somId somDI_vrGet_PageHeight = &somDS_vrGet_PageHeight;
#pragma linkage(somRD_vrGet_PageHeight, system)
static bool   SOMLINK somRD_vrGet_PageHeight(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_PageHeight,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_PageHeight),val));
}

/*
 * New Method: vrGet_Printing
 */
#pragma linkage(VRPrinterInstance_vrGet_Printing, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_Printing(VRPrinter *somSelf,
        BOOL *on);
static char *somMN_vrGet_Printing = "vrGet_Printing";
static somId somId_vrGet_Printing = &somMN_vrGet_Printing;
static char *somDS_vrGet_Printing = somMD_VRPrinter_vrGet_Printing;
static somId somDI_vrGet_Printing = &somDS_vrGet_Printing;
#pragma linkage(somRD_vrGet_Printing, system)
static bool   SOMLINK somRD_vrGet_Printing(VRPrinter *somSelf,
        BOOL *on)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_Printing,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_Printing),on));
}

/*
 * New Method: vrGet_CurrentPrinter
 */
#pragma linkage(VRPrinterInstance_vrGet_CurrentPrinter, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_CurrentPrinter(VRPrinter *somSelf,
        PSZ *str);
static char *somMN_vrGet_CurrentPrinter = "vrGet_CurrentPrinter";
static somId somId_vrGet_CurrentPrinter = &somMN_vrGet_CurrentPrinter;
static char *somDS_vrGet_CurrentPrinter = somMD_VRPrinter_vrGet_CurrentPrinter;
static somId somDI_vrGet_CurrentPrinter = &somDS_vrGet_CurrentPrinter;
#pragma linkage(somRD_vrGet_CurrentPrinter, system)
static bool   SOMLINK somRD_vrGet_CurrentPrinter(VRPrinter *somSelf,
        PSZ *str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_CurrentPrinter,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_CurrentPrinter),str));
}

/*
 * New Method: vrGet_CurrentDevice
 */
#pragma linkage(VRPrinterInstance_vrGet_CurrentDevice, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_CurrentDevice(VRPrinter *somSelf,
        PSZ *str);
static char *somMN_vrGet_CurrentDevice = "vrGet_CurrentDevice";
static somId somId_vrGet_CurrentDevice = &somMN_vrGet_CurrentDevice;
static char *somDS_vrGet_CurrentDevice = somMD_VRPrinter_vrGet_CurrentDevice;
static somId somDI_vrGet_CurrentDevice = &somDS_vrGet_CurrentDevice;
#pragma linkage(somRD_vrGet_CurrentDevice, system)
static bool   SOMLINK somRD_vrGet_CurrentDevice(VRPrinter *somSelf,
        PSZ *str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_CurrentDevice,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_CurrentDevice),str));
}

/*
 * New Method: vrSet_LineSpace
 */
#pragma linkage(VRPrinterInstance_vrSet_LineSpace, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrSet_LineSpace(VRPrinter *somSelf,
        ULONG val);
static char *somMN_vrSet_LineSpace = "vrSet_LineSpace";
static somId somId_vrSet_LineSpace = &somMN_vrSet_LineSpace;
static char *somDS_vrSet_LineSpace = somMD_VRPrinter_vrSet_LineSpace;
static somId somDI_vrSet_LineSpace = &somDS_vrSet_LineSpace;
#pragma linkage(somRD_vrSet_LineSpace, system)
static bool   SOMLINK somRD_vrSet_LineSpace(VRPrinter *somSelf,
        ULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrSet_LineSpace,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_LineSpace),val));
}

/*
 * New Method: vrGet_LineSpace
 */
#pragma linkage(VRPrinterInstance_vrGet_LineSpace, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_LineSpace(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_LineSpace = "vrGet_LineSpace";
static somId somId_vrGet_LineSpace = &somMN_vrGet_LineSpace;
static char *somDS_vrGet_LineSpace = somMD_VRPrinter_vrGet_LineSpace;
static somId somDI_vrGet_LineSpace = &somDS_vrGet_LineSpace;
#pragma linkage(somRD_vrGet_LineSpace, system)
static bool   SOMLINK somRD_vrGet_LineSpace(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_LineSpace,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_LineSpace),val));
}

/*
 * New Method: vrGet_Version
 */
#pragma linkage(VRPrinterInstance_vrGet_Version, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_Version(VRPrinter *somSelf,
        PSZ *str);
static char *somMN_vrGet_Version = "vrGet_Version";
static somId somId_vrGet_Version = &somMN_vrGet_Version;
static char *somDS_vrGet_Version = somMD_VRPrinter_vrGet_Version;
static somId somDI_vrGet_Version = &somDS_vrGet_Version;
#pragma linkage(somRD_vrGet_Version, system)
static bool   SOMLINK somRD_vrGet_Version(VRPrinter *somSelf,
        PSZ *str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_Version,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_Version),str));
}

/*
 * New Method: vrSet_PrintColor
 */
#pragma linkage(VRPrinterInstance_vrSet_PrintColor, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrSet_PrintColor(VRPrinter *somSelf,
        PSZ str);
static char *somMN_vrSet_PrintColor = "vrSet_PrintColor";
static somId somId_vrSet_PrintColor = &somMN_vrSet_PrintColor;
static char *somDS_vrSet_PrintColor = somMD_VRPrinter_vrSet_PrintColor;
static somId somDI_vrSet_PrintColor = &somDS_vrSet_PrintColor;
#pragma linkage(somRD_vrSet_PrintColor, system)
static bool   SOMLINK somRD_vrSet_PrintColor(VRPrinter *somSelf,
        PSZ str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrSet_PrintColor,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_PrintColor),str));
}

/*
 * New Method: vrGet_PrintColor
 */
#pragma linkage(VRPrinterInstance_vrGet_PrintColor, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_PrintColor(VRPrinter *somSelf,
        PSZ *str);
static char *somMN_vrGet_PrintColor = "vrGet_PrintColor";
static somId somId_vrGet_PrintColor = &somMN_vrGet_PrintColor;
static char *somDS_vrGet_PrintColor = somMD_VRPrinter_vrGet_PrintColor;
static somId somDI_vrGet_PrintColor = &somDS_vrGet_PrintColor;
#pragma linkage(somRD_vrGet_PrintColor, system)
static bool   SOMLINK somRD_vrGet_PrintColor(VRPrinter *somSelf,
        PSZ *str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_PrintColor,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_PrintColor),str));
}

/*
 * New Method: vrSet_ColorEnabled
 */
#pragma linkage(VRPrinterInstance_vrSet_ColorEnabled, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrSet_ColorEnabled(VRPrinter *somSelf,
        BOOL on);
static char *somMN_vrSet_ColorEnabled = "vrSet_ColorEnabled";
static somId somId_vrSet_ColorEnabled = &somMN_vrSet_ColorEnabled;
static char *somDS_vrSet_ColorEnabled = somMD_VRPrinter_vrSet_ColorEnabled;
static somId somDI_vrSet_ColorEnabled = &somDS_vrSet_ColorEnabled;
#pragma linkage(somRD_vrSet_ColorEnabled, system)
static bool   SOMLINK somRD_vrSet_ColorEnabled(VRPrinter *somSelf,
        BOOL on)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrSet_ColorEnabled,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_ColorEnabled),on));
}

/*
 * New Method: vrGet_ColorEnabled
 */
#pragma linkage(VRPrinterInstance_vrGet_ColorEnabled, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_ColorEnabled(VRPrinter *somSelf,
        BOOL *on);
static char *somMN_vrGet_ColorEnabled = "vrGet_ColorEnabled";
static somId somId_vrGet_ColorEnabled = &somMN_vrGet_ColorEnabled;
static char *somDS_vrGet_ColorEnabled = somMD_VRPrinter_vrGet_ColorEnabled;
static somId somDI_vrGet_ColorEnabled = &somDS_vrGet_ColorEnabled;
#pragma linkage(somRD_vrGet_ColorEnabled, system)
static bool   SOMLINK somRD_vrGet_ColorEnabled(VRPrinter *somSelf,
        BOOL *on)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_ColorEnabled,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_ColorEnabled),on));
}

/*
 * New Method: vrSet_Measures
 */
#pragma linkage(VRPrinterInstance_vrSet_Measures, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrSet_Measures(VRPrinter *somSelf,
        PSZ str);
static char *somMN_vrSet_Measures = "vrSet_Measures";
static somId somId_vrSet_Measures = &somMN_vrSet_Measures;
static char *somDS_vrSet_Measures = somMD_VRPrinter_vrSet_Measures;
static somId somDI_vrSet_Measures = &somDS_vrSet_Measures;
#pragma linkage(somRD_vrSet_Measures, system)
static bool   SOMLINK somRD_vrSet_Measures(VRPrinter *somSelf,
        PSZ str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrSet_Measures,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_Measures),str));
}

/*
 * New Method: vrGet_Measures
 */
#pragma linkage(VRPrinterInstance_vrGet_Measures, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_Measures(VRPrinter *somSelf,
        PSZ *str);
static char *somMN_vrGet_Measures = "vrGet_Measures";
static somId somId_vrGet_Measures = &somMN_vrGet_Measures;
static char *somDS_vrGet_Measures = somMD_VRPrinter_vrGet_Measures;
static somId somDI_vrGet_Measures = &somDS_vrGet_Measures;
#pragma linkage(somRD_vrGet_Measures, system)
static bool   SOMLINK somRD_vrGet_Measures(VRPrinter *somSelf,
        PSZ *str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_Measures,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_Measures),str));
}

/*
 * New Method: vrGet_PageNum
 */
#pragma linkage(VRPrinterInstance_vrGet_PageNum, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_PageNum(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_PageNum = "vrGet_PageNum";
static somId somId_vrGet_PageNum = &somMN_vrGet_PageNum;
static char *somDS_vrGet_PageNum = somMD_VRPrinter_vrGet_PageNum;
static somId somDI_vrGet_PageNum = &somDS_vrGet_PageNum;
#pragma linkage(somRD_vrGet_PageNum, system)
static bool   SOMLINK somRD_vrGet_PageNum(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_PageNum,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_PageNum),val));
}

/*
 * New Method: vrGet_JobName
 */
#pragma linkage(VRPrinterInstance_vrGet_JobName, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_JobName(VRPrinter *somSelf,
        PSZ *str);
static char *somMN_vrGet_JobName = "vrGet_JobName";
static somId somId_vrGet_JobName = &somMN_vrGet_JobName;
static char *somDS_vrGet_JobName = somMD_VRPrinter_vrGet_JobName;
static somId somDI_vrGet_JobName = &somDS_vrGet_JobName;
#pragma linkage(somRD_vrGet_JobName, system)
static bool   SOMLINK somRD_vrGet_JobName(VRPrinter *somSelf,
        PSZ *str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_JobName,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_JobName),str));
}

/*
 * New Method: vrGet_DefaultPrinter
 */
#pragma linkage(VRPrinterInstance_vrGet_DefaultPrinter, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_DefaultPrinter(VRPrinter *somSelf,
        PSZ *str);
static char *somMN_vrGet_DefaultPrinter = "vrGet_DefaultPrinter";
static somId somId_vrGet_DefaultPrinter = &somMN_vrGet_DefaultPrinter;
static char *somDS_vrGet_DefaultPrinter = somMD_VRPrinter_vrGet_DefaultPrinter;
static somId somDI_vrGet_DefaultPrinter = &somDS_vrGet_DefaultPrinter;
#pragma linkage(somRD_vrGet_DefaultPrinter, system)
static bool   SOMLINK somRD_vrGet_DefaultPrinter(VRPrinter *somSelf,
        PSZ *str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_DefaultPrinter,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_DefaultPrinter),str));
}

/*
 * New Method: vrGet_MinLeftMar
 */
#pragma linkage(VRPrinterInstance_vrGet_MinLeftMar, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_MinLeftMar(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_MinLeftMar = "vrGet_MinLeftMar";
static somId somId_vrGet_MinLeftMar = &somMN_vrGet_MinLeftMar;
static char *somDS_vrGet_MinLeftMar = somMD_VRPrinter_vrGet_MinLeftMar;
static somId somDI_vrGet_MinLeftMar = &somDS_vrGet_MinLeftMar;
#pragma linkage(somRD_vrGet_MinLeftMar, system)
static bool   SOMLINK somRD_vrGet_MinLeftMar(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_MinLeftMar,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_MinLeftMar),val));
}

/*
 * New Method: vrGet_MinRightMar
 */
#pragma linkage(VRPrinterInstance_vrGet_MinRightMar, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_MinRightMar(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_MinRightMar = "vrGet_MinRightMar";
static somId somId_vrGet_MinRightMar = &somMN_vrGet_MinRightMar;
static char *somDS_vrGet_MinRightMar = somMD_VRPrinter_vrGet_MinRightMar;
static somId somDI_vrGet_MinRightMar = &somDS_vrGet_MinRightMar;
#pragma linkage(somRD_vrGet_MinRightMar, system)
static bool   SOMLINK somRD_vrGet_MinRightMar(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_MinRightMar,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_MinRightMar),val));
}

/*
 * New Method: vrGet_MinTopMar
 */
#pragma linkage(VRPrinterInstance_vrGet_MinTopMar, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_MinTopMar(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_MinTopMar = "vrGet_MinTopMar";
static somId somId_vrGet_MinTopMar = &somMN_vrGet_MinTopMar;
static char *somDS_vrGet_MinTopMar = somMD_VRPrinter_vrGet_MinTopMar;
static somId somDI_vrGet_MinTopMar = &somDS_vrGet_MinTopMar;
#pragma linkage(somRD_vrGet_MinTopMar, system)
static bool   SOMLINK somRD_vrGet_MinTopMar(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_MinTopMar,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_MinTopMar),val));
}

/*
 * New Method: vrGet_MinBottomMar
 */
#pragma linkage(VRPrinterInstance_vrGet_MinBottomMar, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_MinBottomMar(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_MinBottomMar = "vrGet_MinBottomMar";
static somId somId_vrGet_MinBottomMar = &somMN_vrGet_MinBottomMar;
static char *somDS_vrGet_MinBottomMar = somMD_VRPrinter_vrGet_MinBottomMar;
static somId somDI_vrGet_MinBottomMar = &somDS_vrGet_MinBottomMar;
#pragma linkage(somRD_vrGet_MinBottomMar, system)
static bool   SOMLINK somRD_vrGet_MinBottomMar(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_MinBottomMar,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_MinBottomMar),val));
}

/*
 * New Method: vrGet_FormName
 */
#pragma linkage(VRPrinterInstance_vrGet_FormName, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_FormName(VRPrinter *somSelf,
        PSZ *str);
static char *somMN_vrGet_FormName = "vrGet_FormName";
static somId somId_vrGet_FormName = &somMN_vrGet_FormName;
static char *somDS_vrGet_FormName = somMD_VRPrinter_vrGet_FormName;
static somId somDI_vrGet_FormName = &somDS_vrGet_FormName;
#pragma linkage(somRD_vrGet_FormName, system)
static bool   SOMLINK somRD_vrGet_FormName(VRPrinter *somSelf,
        PSZ *str)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_FormName,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_FormName),str));
}

/*
 * New Method: vrGet_FormWidth
 */
#pragma linkage(VRPrinterInstance_vrGet_FormWidth, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_FormWidth(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_FormWidth = "vrGet_FormWidth";
static somId somId_vrGet_FormWidth = &somMN_vrGet_FormWidth;
static char *somDS_vrGet_FormWidth = somMD_VRPrinter_vrGet_FormWidth;
static somId somDI_vrGet_FormWidth = &somDS_vrGet_FormWidth;
#pragma linkage(somRD_vrGet_FormWidth, system)
static bool   SOMLINK somRD_vrGet_FormWidth(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_FormWidth,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_FormWidth),val));
}

/*
 * New Method: vrGet_FormHeight
 */
#pragma linkage(VRPrinterInstance_vrGet_FormHeight, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_FormHeight(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_FormHeight = "vrGet_FormHeight";
static somId somId_vrGet_FormHeight = &somMN_vrGet_FormHeight;
static char *somDS_vrGet_FormHeight = somMD_VRPrinter_vrGet_FormHeight;
static somId somDI_vrGet_FormHeight = &somDS_vrGet_FormHeight;
#pragma linkage(somRD_vrGet_FormHeight, system)
static bool   SOMLINK somRD_vrGet_FormHeight(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_FormHeight,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_FormHeight),val));
}

/*
 * New Method: vrSet_ShowProgress
 */
#pragma linkage(VRPrinterInstance_vrSet_ShowProgress, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrSet_ShowProgress(VRPrinter *somSelf,
        BOOL on);
static char *somMN_vrSet_ShowProgress = "vrSet_ShowProgress";
static somId somId_vrSet_ShowProgress = &somMN_vrSet_ShowProgress;
static char *somDS_vrSet_ShowProgress = somMD_VRPrinter_vrSet_ShowProgress;
static somId somDI_vrSet_ShowProgress = &somDS_vrSet_ShowProgress;
#pragma linkage(somRD_vrSet_ShowProgress, system)
static bool   SOMLINK somRD_vrSet_ShowProgress(VRPrinter *somSelf,
        BOOL on)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrSet_ShowProgress,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_ShowProgress),on));
}

/*
 * New Method: vrGet_ShowProgress
 */
#pragma linkage(VRPrinterInstance_vrGet_ShowProgress, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_ShowProgress(VRPrinter *somSelf,
        BOOL *on);
static char *somMN_vrGet_ShowProgress = "vrGet_ShowProgress";
static somId somId_vrGet_ShowProgress = &somMN_vrGet_ShowProgress;
static char *somDS_vrGet_ShowProgress = somMD_VRPrinter_vrGet_ShowProgress;
static somId somDI_vrGet_ShowProgress = &somDS_vrGet_ShowProgress;
#pragma linkage(somRD_vrGet_ShowProgress, system)
static bool   SOMLINK somRD_vrGet_ShowProgress(VRPrinter *somSelf,
        BOOL *on)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_ShowProgress,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_ShowProgress),on));
}

/*
 * New Method: vrGet_XPos
 */
#pragma linkage(VRPrinterInstance_vrGet_XPos, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_XPos(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_XPos = "vrGet_XPos";
static somId somId_vrGet_XPos = &somMN_vrGet_XPos;
static char *somDS_vrGet_XPos = somMD_VRPrinter_vrGet_XPos;
static somId somDI_vrGet_XPos = &somDS_vrGet_XPos;
#pragma linkage(somRD_vrGet_XPos, system)
static bool   SOMLINK somRD_vrGet_XPos(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_XPos,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_XPos),val));
}

/*
 * New Method: vrGet_YPos
 */
#pragma linkage(VRPrinterInstance_vrGet_YPos, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_YPos(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_YPos = "vrGet_YPos";
static somId somId_vrGet_YPos = &somMN_vrGet_YPos;
static char *somDS_vrGet_YPos = somMD_VRPrinter_vrGet_YPos;
static somId somDI_vrGet_YPos = &somDS_vrGet_YPos;
#pragma linkage(somRD_vrGet_YPos, system)
static bool   SOMLINK somRD_vrGet_YPos(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_YPos,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_YPos),val));
}

/*
 * New Method: vrGet_XposTwips
 */
#pragma linkage(VRPrinterInstance_vrGet_XposTwips, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_XposTwips(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_XposTwips = "vrGet_XposTwips";
static somId somId_vrGet_XposTwips = &somMN_vrGet_XposTwips;
static char *somDS_vrGet_XposTwips = somMD_VRPrinter_vrGet_XposTwips;
static somId somDI_vrGet_XposTwips = &somDS_vrGet_XposTwips;
#pragma linkage(somRD_vrGet_XposTwips, system)
static bool   SOMLINK somRD_vrGet_XposTwips(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_XposTwips,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_XposTwips),val));
}

/*
 * New Method: vrGet_YposTwips
 */
#pragma linkage(VRPrinterInstance_vrGet_YposTwips, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrGet_YposTwips(VRPrinter *somSelf,
        PULONG val);
static char *somMN_vrGet_YposTwips = "vrGet_YposTwips";
static somId somId_vrGet_YposTwips = &somMN_vrGet_YposTwips;
static char *somDS_vrGet_YposTwips = somMD_VRPrinter_vrGet_YposTwips;
static somId somDI_vrGet_YposTwips = &somDS_vrGet_YposTwips;
#pragma linkage(somRD_vrGet_YposTwips, system)
static bool   SOMLINK somRD_vrGet_YposTwips(VRPrinter *somSelf,
        PULONG val)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrGet_YposTwips,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_YposTwips),val));
}

/*
 * New Method: vrRXMethod_ClosePrintJob
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_ClosePrintJob, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_ClosePrintJob(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_ClosePrintJob = "vrRXMethod_ClosePrintJob";
static somId somId_vrRXMethod_ClosePrintJob = &somMN_vrRXMethod_ClosePrintJob;
static char *somDS_vrRXMethod_ClosePrintJob = somMD_VRPrinter_vrRXMethod_ClosePrintJob;
static somId somDI_vrRXMethod_ClosePrintJob = &somDS_vrRXMethod_ClosePrintJob;
#pragma linkage(somRD_vrRXMethod_ClosePrintJob, system)
static bool   SOMLINK somRD_vrRXMethod_ClosePrintJob(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_ClosePrintJob,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_ClosePrintJob),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_DefineTable
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_DefineTable, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_DefineTable(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_DefineTable = "vrRXMethod_DefineTable";
static somId somId_vrRXMethod_DefineTable = &somMN_vrRXMethod_DefineTable;
static char *somDS_vrRXMethod_DefineTable = somMD_VRPrinter_vrRXMethod_DefineTable;
static somId somDI_vrRXMethod_DefineTable = &somDS_vrRXMethod_DefineTable;
#pragma linkage(somRD_vrRXMethod_DefineTable, system)
static bool   SOMLINK somRD_vrRXMethod_DefineTable(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_DefineTable,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_DefineTable),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_EndRow
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_EndRow, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_EndRow(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_EndRow = "vrRXMethod_EndRow";
static somId somId_vrRXMethod_EndRow = &somMN_vrRXMethod_EndRow;
static char *somDS_vrRXMethod_EndRow = somMD_VRPrinter_vrRXMethod_EndRow;
static somId somDI_vrRXMethod_EndRow = &somDS_vrRXMethod_EndRow;
#pragma linkage(somRD_vrRXMethod_EndRow, system)
static bool   SOMLINK somRD_vrRXMethod_EndRow(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_EndRow,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_EndRow),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_EndTable
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_EndTable, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_EndTable(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_EndTable = "vrRXMethod_EndTable";
static somId somId_vrRXMethod_EndTable = &somMN_vrRXMethod_EndTable;
static char *somDS_vrRXMethod_EndTable = somMD_VRPrinter_vrRXMethod_EndTable;
static somId somDI_vrRXMethod_EndTable = &somDS_vrRXMethod_EndTable;
#pragma linkage(somRD_vrRXMethod_EndTable, system)
static bool   SOMLINK somRD_vrRXMethod_EndTable(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_EndTable,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_EndTable),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_GoTo
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_GoTo, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_GoTo(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_GoTo = "vrRXMethod_GoTo";
static somId somId_vrRXMethod_GoTo = &somMN_vrRXMethod_GoTo;
static char *somDS_vrRXMethod_GoTo = somMD_VRPrinter_vrRXMethod_GoTo;
static somId somDI_vrRXMethod_GoTo = &somDS_vrRXMethod_GoTo;
#pragma linkage(somRD_vrRXMethod_GoTo, system)
static bool   SOMLINK somRD_vrRXMethod_GoTo(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_GoTo,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_GoTo),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_JobProperties
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_JobProperties, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_JobProperties(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_JobProperties = "vrRXMethod_JobProperties";
static somId somId_vrRXMethod_JobProperties = &somMN_vrRXMethod_JobProperties;
static char *somDS_vrRXMethod_JobProperties = somMD_VRPrinter_vrRXMethod_JobProperties;
static somId somDI_vrRXMethod_JobProperties = &somDS_vrRXMethod_JobProperties;
#pragma linkage(somRD_vrRXMethod_JobProperties, system)
static bool   SOMLINK somRD_vrRXMethod_JobProperties(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_JobProperties,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_JobProperties),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintJustified
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintJustified, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintJustified(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintJustified = "vrRXMethod_PrintJustified";
static somId somId_vrRXMethod_PrintJustified = &somMN_vrRXMethod_PrintJustified;
static char *somDS_vrRXMethod_PrintJustified = somMD_VRPrinter_vrRXMethod_PrintJustified;
static somId somDI_vrRXMethod_PrintJustified = &somDS_vrRXMethod_PrintJustified;
#pragma linkage(somRD_vrRXMethod_PrintJustified, system)
static bool   SOMLINK somRD_vrRXMethod_PrintJustified(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintJustified,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintJustified),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintCentered
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintCentered, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintCentered(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintCentered = "vrRXMethod_PrintCentered";
static somId somId_vrRXMethod_PrintCentered = &somMN_vrRXMethod_PrintCentered;
static char *somDS_vrRXMethod_PrintCentered = somMD_VRPrinter_vrRXMethod_PrintCentered;
static somId somDI_vrRXMethod_PrintCentered = &somDS_vrRXMethod_PrintCentered;
#pragma linkage(somRD_vrRXMethod_PrintCentered, system)
static bool   SOMLINK somRD_vrRXMethod_PrintCentered(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintCentered,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintCentered),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintRight
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintRight, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintRight(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintRight = "vrRXMethod_PrintRight";
static somId somId_vrRXMethod_PrintRight = &somMN_vrRXMethod_PrintRight;
static char *somDS_vrRXMethod_PrintRight = somMD_VRPrinter_vrRXMethod_PrintRight;
static somId somDI_vrRXMethod_PrintRight = &somDS_vrRXMethod_PrintRight;
#pragma linkage(somRD_vrRXMethod_PrintRight, system)
static bool   SOMLINK somRD_vrRXMethod_PrintRight(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintRight,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintRight),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintLeft
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintLeft, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintLeft(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintLeft = "vrRXMethod_PrintLeft";
static somId somId_vrRXMethod_PrintLeft = &somMN_vrRXMethod_PrintLeft;
static char *somDS_vrRXMethod_PrintLeft = somMD_VRPrinter_vrRXMethod_PrintLeft;
static somId somDI_vrRXMethod_PrintLeft = &somDS_vrRXMethod_PrintLeft;
#pragma linkage(somRD_vrRXMethod_PrintLeft, system)
static bool   SOMLINK somRD_vrRXMethod_PrintLeft(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintLeft,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintLeft),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintLine
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintLine, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintLine(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintLine = "vrRXMethod_PrintLine";
static somId somId_vrRXMethod_PrintLine = &somMN_vrRXMethod_PrintLine;
static char *somDS_vrRXMethod_PrintLine = somMD_VRPrinter_vrRXMethod_PrintLine;
static somId somDI_vrRXMethod_PrintLine = &somDS_vrRXMethod_PrintLine;
#pragma linkage(somRD_vrRXMethod_PrintLine, system)
static bool   SOMLINK somRD_vrRXMethod_PrintLine(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintLine,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintLine),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintBox
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintBox, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintBox(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintBox = "vrRXMethod_PrintBox";
static somId somId_vrRXMethod_PrintBox = &somMN_vrRXMethod_PrintBox;
static char *somDS_vrRXMethod_PrintBox = somMD_VRPrinter_vrRXMethod_PrintBox;
static somId somDI_vrRXMethod_PrintBox = &somDS_vrRXMethod_PrintBox;
#pragma linkage(somRD_vrRXMethod_PrintBox, system)
static bool   SOMLINK somRD_vrRXMethod_PrintBox(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintBox,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintBox),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintBitmap
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintBitmap, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintBitmap(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintBitmap = "vrRXMethod_PrintBitmap";
static somId somId_vrRXMethod_PrintBitmap = &somMN_vrRXMethod_PrintBitmap;
static char *somDS_vrRXMethod_PrintBitmap = somMD_VRPrinter_vrRXMethod_PrintBitmap;
static somId somDI_vrRXMethod_PrintBitmap = &somDS_vrRXMethod_PrintBitmap;
#pragma linkage(somRD_vrRXMethod_PrintBitmap, system)
static bool   SOMLINK somRD_vrRXMethod_PrintBitmap(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintBitmap,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintBitmap),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintFile
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintFile, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintFile(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintFile = "vrRXMethod_PrintFile";
static somId somId_vrRXMethod_PrintFile = &somMN_vrRXMethod_PrintFile;
static char *somDS_vrRXMethod_PrintFile = somMD_VRPrinter_vrRXMethod_PrintFile;
static somId somDI_vrRXMethod_PrintFile = &somDS_vrRXMethod_PrintFile;
#pragma linkage(somRD_vrRXMethod_PrintFile, system)
static bool   SOMLINK somRD_vrRXMethod_PrintFile(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintFile,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintFile),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_StartCol
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_StartCol, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_StartCol(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_StartCol = "vrRXMethod_StartCol";
static somId somId_vrRXMethod_StartCol = &somMN_vrRXMethod_StartCol;
static char *somDS_vrRXMethod_StartCol = somMD_VRPrinter_vrRXMethod_StartCol;
static somId somDI_vrRXMethod_StartCol = &somDS_vrRXMethod_StartCol;
#pragma linkage(somRD_vrRXMethod_StartCol, system)
static bool   SOMLINK somRD_vrRXMethod_StartCol(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_StartCol,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_StartCol),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_StartRow
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_StartRow, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_StartRow(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_StartRow = "vrRXMethod_StartRow";
static somId somId_vrRXMethod_StartRow = &somMN_vrRXMethod_StartRow;
static char *somDS_vrRXMethod_StartRow = somMD_VRPrinter_vrRXMethod_StartRow;
static somId somDI_vrRXMethod_StartRow = &somDS_vrRXMethod_StartRow;
#pragma linkage(somRD_vrRXMethod_StartRow, system)
static bool   SOMLINK somRD_vrRXMethod_StartRow(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_StartRow,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_StartRow),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_StartTable
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_StartTable, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_StartTable(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_StartTable = "vrRXMethod_StartTable";
static somId somId_vrRXMethod_StartTable = &somMN_vrRXMethod_StartTable;
static char *somDS_vrRXMethod_StartTable = somMD_VRPrinter_vrRXMethod_StartTable;
static somId somDI_vrRXMethod_StartTable = &somDS_vrRXMethod_StartTable;
#pragma linkage(somRD_vrRXMethod_StartTable, system)
static bool   SOMLINK somRD_vrRXMethod_StartTable(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_StartTable,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_StartTable),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_SetHeader
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_SetHeader, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_SetHeader(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_SetHeader = "vrRXMethod_SetHeader";
static somId somId_vrRXMethod_SetHeader = &somMN_vrRXMethod_SetHeader;
static char *somDS_vrRXMethod_SetHeader = somMD_VRPrinter_vrRXMethod_SetHeader;
static somId somDI_vrRXMethod_SetHeader = &somDS_vrRXMethod_SetHeader;
#pragma linkage(somRD_vrRXMethod_SetHeader, system)
static bool   SOMLINK somRD_vrRXMethod_SetHeader(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_SetHeader,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_SetHeader),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_SetHeaderMode
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_SetHeaderMode, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_SetHeaderMode(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_SetHeaderMode = "vrRXMethod_SetHeaderMode";
static somId somId_vrRXMethod_SetHeaderMode = &somMN_vrRXMethod_SetHeaderMode;
static char *somDS_vrRXMethod_SetHeaderMode = somMD_VRPrinter_vrRXMethod_SetHeaderMode;
static somId somDI_vrRXMethod_SetHeaderMode = &somDS_vrRXMethod_SetHeaderMode;
#pragma linkage(somRD_vrRXMethod_SetHeaderMode, system)
static bool   SOMLINK somRD_vrRXMethod_SetHeaderMode(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_SetHeaderMode,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_SetHeaderMode),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_SetFooter
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_SetFooter, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_SetFooter(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_SetFooter = "vrRXMethod_SetFooter";
static somId somId_vrRXMethod_SetFooter = &somMN_vrRXMethod_SetFooter;
static char *somDS_vrRXMethod_SetFooter = somMD_VRPrinter_vrRXMethod_SetFooter;
static somId somDI_vrRXMethod_SetFooter = &somDS_vrRXMethod_SetFooter;
#pragma linkage(somRD_vrRXMethod_SetFooter, system)
static bool   SOMLINK somRD_vrRXMethod_SetFooter(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_SetFooter,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_SetFooter),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_SetMargins
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_SetMargins, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_SetMargins(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_SetMargins = "vrRXMethod_SetMargins";
static somId somId_vrRXMethod_SetMargins = &somMN_vrRXMethod_SetMargins;
static char *somDS_vrRXMethod_SetMargins = somMD_VRPrinter_vrRXMethod_SetMargins;
static somId somDI_vrRXMethod_SetMargins = &somDS_vrRXMethod_SetMargins;
#pragma linkage(somRD_vrRXMethod_SetMargins, system)
static bool   SOMLINK somRD_vrRXMethod_SetMargins(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_SetMargins,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_SetMargins),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_SetPrinter
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_SetPrinter, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_SetPrinter(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_SetPrinter = "vrRXMethod_SetPrinter";
static somId somId_vrRXMethod_SetPrinter = &somMN_vrRXMethod_SetPrinter;
static char *somDS_vrRXMethod_SetPrinter = somMD_VRPrinter_vrRXMethod_SetPrinter;
static somId somDI_vrRXMethod_SetPrinter = &somDS_vrRXMethod_SetPrinter;
#pragma linkage(somRD_vrRXMethod_SetPrinter, system)
static bool   SOMLINK somRD_vrRXMethod_SetPrinter(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_SetPrinter,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_SetPrinter),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrinterDialog
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrinterDialog, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrinterDialog(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrinterDialog = "vrRXMethod_PrinterDialog";
static somId somId_vrRXMethod_PrinterDialog = &somMN_vrRXMethod_PrinterDialog;
static char *somDS_vrRXMethod_PrinterDialog = somMD_VRPrinter_vrRXMethod_PrinterDialog;
static somId somDI_vrRXMethod_PrinterDialog = &somDS_vrRXMethod_PrinterDialog;
#pragma linkage(somRD_vrRXMethod_PrinterDialog, system)
static bool   SOMLINK somRD_vrRXMethod_PrinterDialog(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrinterDialog,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrinterDialog),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_FontDialog
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_FontDialog, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_FontDialog(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_FontDialog = "vrRXMethod_FontDialog";
static somId somId_vrRXMethod_FontDialog = &somMN_vrRXMethod_FontDialog;
static char *somDS_vrRXMethod_FontDialog = somMD_VRPrinter_vrRXMethod_FontDialog;
static somId somDI_vrRXMethod_FontDialog = &somDS_vrRXMethod_FontDialog;
#pragma linkage(somRD_vrRXMethod_FontDialog, system)
static bool   SOMLINK somRD_vrRXMethod_FontDialog(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_FontDialog,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_FontDialog),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_OpenPrintJob
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_OpenPrintJob, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_OpenPrintJob(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_OpenPrintJob = "vrRXMethod_OpenPrintJob";
static somId somId_vrRXMethod_OpenPrintJob = &somMN_vrRXMethod_OpenPrintJob;
static char *somDS_vrRXMethod_OpenPrintJob = somMD_VRPrinter_vrRXMethod_OpenPrintJob;
static somId somDI_vrRXMethod_OpenPrintJob = &somDS_vrRXMethod_OpenPrintJob;
#pragma linkage(somRD_vrRXMethod_OpenPrintJob, system)
static bool   SOMLINK somRD_vrRXMethod_OpenPrintJob(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_OpenPrintJob,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_OpenPrintJob),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_NewPage
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_NewPage, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_NewPage(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_NewPage = "vrRXMethod_NewPage";
static somId somId_vrRXMethod_NewPage = &somMN_vrRXMethod_NewPage;
static char *somDS_vrRXMethod_NewPage = somMD_VRPrinter_vrRXMethod_NewPage;
static somId somDI_vrRXMethod_NewPage = &somDS_vrRXMethod_NewPage;
#pragma linkage(somRD_vrRXMethod_NewPage, system)
static bool   SOMLINK somRD_vrRXMethod_NewPage(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_NewPage,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_NewPage),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrinterList
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrinterList, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrinterList(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrinterList = "vrRXMethod_PrinterList";
static somId somId_vrRXMethod_PrinterList = &somMN_vrRXMethod_PrinterList;
static char *somDS_vrRXMethod_PrinterList = somMD_VRPrinter_vrRXMethod_PrinterList;
static somId somDI_vrRXMethod_PrinterList = &somDS_vrRXMethod_PrinterList;
#pragma linkage(somRD_vrRXMethod_PrinterList, system)
static bool   SOMLINK somRD_vrRXMethod_PrinterList(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrinterList,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrinterList),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_Tab
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_Tab, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_Tab(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_Tab = "vrRXMethod_Tab";
static somId somId_vrRXMethod_Tab = &somMN_vrRXMethod_Tab;
static char *somDS_vrRXMethod_Tab = somMD_VRPrinter_vrRXMethod_Tab;
static somId somDI_vrRXMethod_Tab = &somDS_vrRXMethod_Tab;
#pragma linkage(somRD_vrRXMethod_Tab, system)
static bool   SOMLINK somRD_vrRXMethod_Tab(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_Tab,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_Tab),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_SetHeaderLineFont
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_SetHeaderLineFont, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_SetHeaderLineFont(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_SetHeaderLineFont = "vrRXMethod_SetHeaderLineFont";
static somId somId_vrRXMethod_SetHeaderLineFont = &somMN_vrRXMethod_SetHeaderLineFont;
static char *somDS_vrRXMethod_SetHeaderLineFont = somMD_VRPrinter_vrRXMethod_SetHeaderLineFont;
static somId somDI_vrRXMethod_SetHeaderLineFont = &somDS_vrRXMethod_SetHeaderLineFont;
#pragma linkage(somRD_vrRXMethod_SetHeaderLineFont, system)
static bool   SOMLINK somRD_vrRXMethod_SetHeaderLineFont(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_SetHeaderLineFont,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_SetHeaderLineFont),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintObjectImage
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintObjectImage, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintObjectImage(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintObjectImage = "vrRXMethod_PrintObjectImage";
static somId somId_vrRXMethod_PrintObjectImage = &somMN_vrRXMethod_PrintObjectImage;
static char *somDS_vrRXMethod_PrintObjectImage = somMD_VRPrinter_vrRXMethod_PrintObjectImage;
static somId somDI_vrRXMethod_PrintObjectImage = &somDS_vrRXMethod_PrintObjectImage;
#pragma linkage(somRD_vrRXMethod_PrintObjectImage, system)
static bool   SOMLINK somRD_vrRXMethod_PrintObjectImage(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintObjectImage,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintObjectImage),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_ResetColHeader
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_ResetColHeader, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_ResetColHeader(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_ResetColHeader = "vrRXMethod_ResetColHeader";
static somId somId_vrRXMethod_ResetColHeader = &somMN_vrRXMethod_ResetColHeader;
static char *somDS_vrRXMethod_ResetColHeader = somMD_VRPrinter_vrRXMethod_ResetColHeader;
static somId somDI_vrRXMethod_ResetColHeader = &somDS_vrRXMethod_ResetColHeader;
#pragma linkage(somRD_vrRXMethod_ResetColHeader, system)
static bool   SOMLINK somRD_vrRXMethod_ResetColHeader(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_ResetColHeader,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_ResetColHeader),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_ResetHeader
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_ResetHeader, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_ResetHeader(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_ResetHeader = "vrRXMethod_ResetHeader";
static somId somId_vrRXMethod_ResetHeader = &somMN_vrRXMethod_ResetHeader;
static char *somDS_vrRXMethod_ResetHeader = somMD_VRPrinter_vrRXMethod_ResetHeader;
static somId somDI_vrRXMethod_ResetHeader = &somDS_vrRXMethod_ResetHeader;
#pragma linkage(somRD_vrRXMethod_ResetHeader, system)
static bool   SOMLINK somRD_vrRXMethod_ResetHeader(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_ResetHeader,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_ResetHeader),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_AbortPrintJob
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_AbortPrintJob, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_AbortPrintJob(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_AbortPrintJob = "vrRXMethod_AbortPrintJob";
static somId somId_vrRXMethod_AbortPrintJob = &somMN_vrRXMethod_AbortPrintJob;
static char *somDS_vrRXMethod_AbortPrintJob = somMD_VRPrinter_vrRXMethod_AbortPrintJob;
static somId somDI_vrRXMethod_AbortPrintJob = &somDS_vrRXMethod_AbortPrintJob;
#pragma linkage(somRD_vrRXMethod_AbortPrintJob, system)
static bool   SOMLINK somRD_vrRXMethod_AbortPrintJob(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_AbortPrintJob,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_AbortPrintJob),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_BlockFits
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_BlockFits, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_BlockFits(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_BlockFits = "vrRXMethod_BlockFits";
static somId somId_vrRXMethod_BlockFits = &somMN_vrRXMethod_BlockFits;
static char *somDS_vrRXMethod_BlockFits = somMD_VRPrinter_vrRXMethod_BlockFits;
static somId somDI_vrRXMethod_BlockFits = &somDS_vrRXMethod_BlockFits;
#pragma linkage(somRD_vrRXMethod_BlockFits, system)
static bool   SOMLINK somRD_vrRXMethod_BlockFits(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_BlockFits,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_BlockFits),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_LineFits
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_LineFits, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_LineFits(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_LineFits = "vrRXMethod_LineFits";
static somId somId_vrRXMethod_LineFits = &somMN_vrRXMethod_LineFits;
static char *somDS_vrRXMethod_LineFits = somMD_VRPrinter_vrRXMethod_LineFits;
static somId somDI_vrRXMethod_LineFits = &somDS_vrRXMethod_LineFits;
#pragma linkage(somRD_vrRXMethod_LineFits, system)
static bool   SOMLINK somRD_vrRXMethod_LineFits(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_LineFits,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_LineFits),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_SetProgressTexts
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_SetProgressTexts, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_SetProgressTexts(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_SetProgressTexts = "vrRXMethod_SetProgressTexts";
static somId somId_vrRXMethod_SetProgressTexts = &somMN_vrRXMethod_SetProgressTexts;
static char *somDS_vrRXMethod_SetProgressTexts = somMD_VRPrinter_vrRXMethod_SetProgressTexts;
static somId somDI_vrRXMethod_SetProgressTexts = &somDS_vrRXMethod_SetProgressTexts;
#pragma linkage(somRD_vrRXMethod_SetProgressTexts, system)
static bool   SOMLINK somRD_vrRXMethod_SetProgressTexts(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_SetProgressTexts,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_SetProgressTexts),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_MoveX
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_MoveX, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_MoveX(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_MoveX = "vrRXMethod_MoveX";
static somId somId_vrRXMethod_MoveX = &somMN_vrRXMethod_MoveX;
static char *somDS_vrRXMethod_MoveX = somMD_VRPrinter_vrRXMethod_MoveX;
static somId somDI_vrRXMethod_MoveX = &somDS_vrRXMethod_MoveX;
#pragma linkage(somRD_vrRXMethod_MoveX, system)
static bool   SOMLINK somRD_vrRXMethod_MoveX(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_MoveX,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_MoveX),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_MoveY
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_MoveY, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_MoveY(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_MoveY = "vrRXMethod_MoveY";
static somId somId_vrRXMethod_MoveY = &somMN_vrRXMethod_MoveY;
static char *somDS_vrRXMethod_MoveY = somMD_VRPrinter_vrRXMethod_MoveY;
static somId somDI_vrRXMethod_MoveY = &somDS_vrRXMethod_MoveY;
#pragma linkage(somRD_vrRXMethod_MoveY, system)
static bool   SOMLINK somRD_vrRXMethod_MoveY(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_MoveY,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_MoveY),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintWinImage
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintWinImage, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintWinImage(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintWinImage = "vrRXMethod_PrintWinImage";
static somId somId_vrRXMethod_PrintWinImage = &somMN_vrRXMethod_PrintWinImage;
static char *somDS_vrRXMethod_PrintWinImage = somMD_VRPrinter_vrRXMethod_PrintWinImage;
static somId somDI_vrRXMethod_PrintWinImage = &somDS_vrRXMethod_PrintWinImage;
#pragma linkage(somRD_vrRXMethod_PrintWinImage, system)
static bool   SOMLINK somRD_vrRXMethod_PrintWinImage(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintWinImage,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintWinImage),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_LoadResMod
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_LoadResMod, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_LoadResMod(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_LoadResMod = "vrRXMethod_LoadResMod";
static somId somId_vrRXMethod_LoadResMod = &somMN_vrRXMethod_LoadResMod;
static char *somDS_vrRXMethod_LoadResMod = somMD_VRPrinter_vrRXMethod_LoadResMod;
static somId somDI_vrRXMethod_LoadResMod = &somDS_vrRXMethod_LoadResMod;
#pragma linkage(somRD_vrRXMethod_LoadResMod, system)
static bool   SOMLINK somRD_vrRXMethod_LoadResMod(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_LoadResMod,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_LoadResMod),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_FreeResMod
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_FreeResMod, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_FreeResMod(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_FreeResMod = "vrRXMethod_FreeResMod";
static somId somId_vrRXMethod_FreeResMod = &somMN_vrRXMethod_FreeResMod;
static char *somDS_vrRXMethod_FreeResMod = somMD_VRPrinter_vrRXMethod_FreeResMod;
static somId somDI_vrRXMethod_FreeResMod = &somDS_vrRXMethod_FreeResMod;
#pragma linkage(somRD_vrRXMethod_FreeResMod, system)
static bool   SOMLINK somRD_vrRXMethod_FreeResMod(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_FreeResMod,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_FreeResMod),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintJPEG
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintJPEG, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintJPEG(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintJPEG = "vrRXMethod_PrintJPEG";
static somId somId_vrRXMethod_PrintJPEG = &somMN_vrRXMethod_PrintJPEG;
static char *somDS_vrRXMethod_PrintJPEG = somMD_VRPrinter_vrRXMethod_PrintJPEG;
static somId somDI_vrRXMethod_PrintJPEG = &somDS_vrRXMethod_PrintJPEG;
#pragma linkage(somRD_vrRXMethod_PrintJPEG, system)
static bool   SOMLINK somRD_vrRXMethod_PrintJPEG(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintJPEG,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintJPEG),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_StringLength
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_StringLength, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_StringLength(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_StringLength = "vrRXMethod_StringLength";
static somId somId_vrRXMethod_StringLength = &somMN_vrRXMethod_StringLength;
static char *somDS_vrRXMethod_StringLength = somMD_VRPrinter_vrRXMethod_StringLength;
static somId somDI_vrRXMethod_StringLength = &somDS_vrRXMethod_StringLength;
#pragma linkage(somRD_vrRXMethod_StringLength, system)
static bool   SOMLINK somRD_vrRXMethod_StringLength(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_StringLength,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_StringLength),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_GotoX
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_GotoX, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_GotoX(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_GotoX = "vrRXMethod_GotoX";
static somId somId_vrRXMethod_GotoX = &somMN_vrRXMethod_GotoX;
static char *somDS_vrRXMethod_GotoX = somMD_VRPrinter_vrRXMethod_GotoX;
static somId somDI_vrRXMethod_GotoX = &somDS_vrRXMethod_GotoX;
#pragma linkage(somRD_vrRXMethod_GotoX, system)
static bool   SOMLINK somRD_vrRXMethod_GotoX(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_GotoX,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_GotoX),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_GotoY
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_GotoY, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_GotoY(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_GotoY = "vrRXMethod_GotoY";
static somId somId_vrRXMethod_GotoY = &somMN_vrRXMethod_GotoY;
static char *somDS_vrRXMethod_GotoY = somMD_VRPrinter_vrRXMethod_GotoY;
static somId somDI_vrRXMethod_GotoY = &somDS_vrRXMethod_GotoY;
#pragma linkage(somRD_vrRXMethod_GotoY, system)
static bool   SOMLINK somRD_vrRXMethod_GotoY(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_GotoY,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_GotoY),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_GotoTab
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_GotoTab, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_GotoTab(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_GotoTab = "vrRXMethod_GotoTab";
static somId somId_vrRXMethod_GotoTab = &somMN_vrRXMethod_GotoTab;
static char *somDS_vrRXMethod_GotoTab = somMD_VRPrinter_vrRXMethod_GotoTab;
static somId somDI_vrRXMethod_GotoTab = &somDS_vrRXMethod_GotoTab;
#pragma linkage(somRD_vrRXMethod_GotoTab, system)
static bool   SOMLINK somRD_vrRXMethod_GotoTab(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_GotoTab,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_GotoTab),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_DrawLine
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_DrawLine, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_DrawLine(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_DrawLine = "vrRXMethod_DrawLine";
static somId somId_vrRXMethod_DrawLine = &somMN_vrRXMethod_DrawLine;
static char *somDS_vrRXMethod_DrawLine = somMD_VRPrinter_vrRXMethod_DrawLine;
static somId somDI_vrRXMethod_DrawLine = &somDS_vrRXMethod_DrawLine;
#pragma linkage(somRD_vrRXMethod_DrawLine, system)
static bool   SOMLINK somRD_vrRXMethod_DrawLine(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_DrawLine,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_DrawLine),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_PrintBullet
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_PrintBullet, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_PrintBullet(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_PrintBullet = "vrRXMethod_PrintBullet";
static somId somId_vrRXMethod_PrintBullet = &somMN_vrRXMethod_PrintBullet;
static char *somDS_vrRXMethod_PrintBullet = somMD_VRPrinter_vrRXMethod_PrintBullet;
static somId somDI_vrRXMethod_PrintBullet = &somDS_vrRXMethod_PrintBullet;
#pragma linkage(somRD_vrRXMethod_PrintBullet, system)
static bool   SOMLINK somRD_vrRXMethod_PrintBullet(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_PrintBullet,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_PrintBullet),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_SaveJobProps
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_SaveJobProps, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_SaveJobProps(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_SaveJobProps = "vrRXMethod_SaveJobProps";
static somId somId_vrRXMethod_SaveJobProps = &somMN_vrRXMethod_SaveJobProps;
static char *somDS_vrRXMethod_SaveJobProps = somMD_VRPrinter_vrRXMethod_SaveJobProps;
static somId somDI_vrRXMethod_SaveJobProps = &somDS_vrRXMethod_SaveJobProps;
#pragma linkage(somRD_vrRXMethod_SaveJobProps, system)
static bool   SOMLINK somRD_vrRXMethod_SaveJobProps(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_SaveJobProps,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_SaveJobProps),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrRXMethod_ReadJobProps
 */
#pragma linkage(VRPrinterInstance_vrRXMethod_ReadJobProps, system)
SOM_Scope bool   SOMLINK VRPrinterInstance_vrRXMethod_ReadJobProps(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata);
static char *somMN_vrRXMethod_ReadJobProps = "vrRXMethod_ReadJobProps";
static somId somId_vrRXMethod_ReadJobProps = &somMN_vrRXMethod_ReadJobProps;
static char *somDS_vrRXMethod_ReadJobProps = somMD_VRPrinter_vrRXMethod_ReadJobProps;
static somId somDI_vrRXMethod_ReadJobProps = &somDS_vrRXMethod_ReadJobProps;
#pragma linkage(somRD_vrRXMethod_ReadJobProps, system)
static bool   SOMLINK somRD_vrRXMethod_ReadJobProps(VRPrinter *somSelf,
        LONG argc,
        PRXSTRING argv,
        PLONG argsused,
        PRXSTRING retstr,
        PVRMETHEXTRA rxdata)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrRXMethod_ReadJobProps,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrRXMethod_ReadJobProps),argc,argv,argsused,retstr,rxdata));
}

/*
 * New Method: vrWM_INITCAP
 */
#pragma linkage(VRPrinterInstance_vrWM_INITCAP, system)
SOM_Scope MRESULT   SOMLINK VRPrinterInstance_vrWM_INITCAP(VRPrinter *somSelf,
        HWND hWnd,
        ULONG msg,
        MPARAM mp1,
        MPARAM mp2);
static char *somMN_vrWM_INITCAP = "vrWM_INITCAP";
static somId somId_vrWM_INITCAP = &somMN_vrWM_INITCAP;
static char *somDS_vrWM_INITCAP = somMD_VRPrinter_vrWM_INITCAP;
static somId somDI_vrWM_INITCAP = &somDS_vrWM_INITCAP;
#pragma linkage(somRD_vrWM_INITCAP, system)
static MRESULT   SOMLINK somRD_vrWM_INITCAP(VRPrinter *somSelf,
        HWND hWnd,
        ULONG msg,
        MPARAM mp1,
        MPARAM mp2)
{
    return ((MRESULT) va_somDispatchL(somSelf, somId_vrWM_INITCAP,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrWM_INITCAP),hWnd,msg,mp1,mp2));
}

/*
 * Routines to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t VRPrinterSM[] = {
    {    &VRPrinterClassData.vrStemFetchLong,
         &somId_vrStemFetchLong,
         &somDI_vrStemFetchLong,
         (somMethodProc *) VRPrinterInstance_vrStemFetchLong,
         (somMethodProc *) somRD_vrStemFetchLong,
         (somMethodProc *) somAP_vrStemFetchLong    },
    {    &VRPrinterClassData.vrStemFetchString,
         &somId_vrStemFetchString,
         &somDI_vrStemFetchString,
         (somMethodProc *) VRPrinterInstance_vrStemFetchString,
         (somMethodProc *) somRD_vrStemFetchString,
         (somMethodProc *) somAP_vrStemFetchString    },
    {    &VRPrinterClassData.vrStemSetValue,
         &somId_vrStemSetValue,
         &somDI_vrStemSetValue,
         (somMethodProc *) VRPrinterInstance_vrStemSetValue,
         (somMethodProc *) somRD_vrStemSetValue,
         (somMethodProc *) somAP_vrStemSetValue    },
    {    &VRPrinterClassData.vrStemSetValueLong,
         &somId_vrStemSetValueLong,
         &somDI_vrStemSetValueLong,
         (somMethodProc *) VRPrinterInstance_vrStemSetValueLong,
         (somMethodProc *) somRD_vrStemSetValueLong,
         (somMethodProc *) somAP_vrStemSetValueLong    },
    {    &VRPrinterClassData.vrGet_LeftMargin,
         &somId_vrGet_LeftMargin,
         &somDI_vrGet_LeftMargin,
         (somMethodProc *) VRPrinterInstance_vrGet_LeftMargin,
         (somMethodProc *) somRD_vrGet_LeftMargin,
         (somMethodProc *) somAP_vrGet_LeftMargin    },
    {    &VRPrinterClassData.vrGet_RightMargin,
         &somId_vrGet_RightMargin,
         &somDI_vrGet_RightMargin,
         (somMethodProc *) VRPrinterInstance_vrGet_RightMargin,
         (somMethodProc *) somRD_vrGet_RightMargin,
         (somMethodProc *) somAP_vrGet_RightMargin    },
    {    &VRPrinterClassData.vrGet_TopMargin,
         &somId_vrGet_TopMargin,
         &somDI_vrGet_TopMargin,
         (somMethodProc *) VRPrinterInstance_vrGet_TopMargin,
         (somMethodProc *) somRD_vrGet_TopMargin,
         (somMethodProc *) somAP_vrGet_TopMargin    },
    {    &VRPrinterClassData.vrGet_BottomMargin,
         &somId_vrGet_BottomMargin,
         &somDI_vrGet_BottomMargin,
         (somMethodProc *) VRPrinterInstance_vrGet_BottomMargin,
         (somMethodProc *) somRD_vrGet_BottomMargin,
         (somMethodProc *) somAP_vrGet_BottomMargin    },
    {    &VRPrinterClassData.vrGet_PageWidth,
         &somId_vrGet_PageWidth,
         &somDI_vrGet_PageWidth,
         (somMethodProc *) VRPrinterInstance_vrGet_PageWidth,
         (somMethodProc *) somRD_vrGet_PageWidth,
         (somMethodProc *) somAP_vrGet_PageWidth    },
    {    &VRPrinterClassData.vrGet_PageHeight,
         &somId_vrGet_PageHeight,
         &somDI_vrGet_PageHeight,
         (somMethodProc *) VRPrinterInstance_vrGet_PageHeight,
         (somMethodProc *) somRD_vrGet_PageHeight,
         (somMethodProc *) somAP_vrGet_PageHeight    },
    {    &VRPrinterClassData.vrGet_Printing,
         &somId_vrGet_Printing,
         &somDI_vrGet_Printing,
         (somMethodProc *) VRPrinterInstance_vrGet_Printing,
         (somMethodProc *) somRD_vrGet_Printing,
         (somMethodProc *) somAP_vrGet_Printing    },
    {    &VRPrinterClassData.vrGet_CurrentPrinter,
         &somId_vrGet_CurrentPrinter,
         &somDI_vrGet_CurrentPrinter,
         (somMethodProc *) VRPrinterInstance_vrGet_CurrentPrinter,
         (somMethodProc *) somRD_vrGet_CurrentPrinter,
         (somMethodProc *) somAP_vrGet_CurrentPrinter    },
    {    &VRPrinterClassData.vrGet_CurrentDevice,
         &somId_vrGet_CurrentDevice,
         &somDI_vrGet_CurrentDevice,
         (somMethodProc *) VRPrinterInstance_vrGet_CurrentDevice,
         (somMethodProc *) somRD_vrGet_CurrentDevice,
         (somMethodProc *) somAP_vrGet_CurrentDevice    },
    {    &VRPrinterClassData.vrSet_LineSpace,
         &somId_vrSet_LineSpace,
         &somDI_vrSet_LineSpace,
         (somMethodProc *) VRPrinterInstance_vrSet_LineSpace,
         (somMethodProc *) somRD_vrSet_LineSpace,
         (somMethodProc *) somAP_vrSet_LineSpace    },
    {    &VRPrinterClassData.vrGet_LineSpace,
         &somId_vrGet_LineSpace,
         &somDI_vrGet_LineSpace,
         (somMethodProc *) VRPrinterInstance_vrGet_LineSpace,
         (somMethodProc *) somRD_vrGet_LineSpace,
         (somMethodProc *) somAP_vrGet_LineSpace    },
    {    &VRPrinterClassData.vrGet_Version,
         &somId_vrGet_Version,
         &somDI_vrGet_Version,
         (somMethodProc *) VRPrinterInstance_vrGet_Version,
         (somMethodProc *) somRD_vrGet_Version,
         (somMethodProc *) somAP_vrGet_Version    },
    {    &VRPrinterClassData.vrSet_PrintColor,
         &somId_vrSet_PrintColor,
         &somDI_vrSet_PrintColor,
         (somMethodProc *) VRPrinterInstance_vrSet_PrintColor,
         (somMethodProc *) somRD_vrSet_PrintColor,
         (somMethodProc *) somAP_vrSet_PrintColor    },
    {    &VRPrinterClassData.vrGet_PrintColor,
         &somId_vrGet_PrintColor,
         &somDI_vrGet_PrintColor,
         (somMethodProc *) VRPrinterInstance_vrGet_PrintColor,
         (somMethodProc *) somRD_vrGet_PrintColor,
         (somMethodProc *) somAP_vrGet_PrintColor    },
    {    &VRPrinterClassData.vrSet_ColorEnabled,
         &somId_vrSet_ColorEnabled,
         &somDI_vrSet_ColorEnabled,
         (somMethodProc *) VRPrinterInstance_vrSet_ColorEnabled,
         (somMethodProc *) somRD_vrSet_ColorEnabled,
         (somMethodProc *) somAP_vrSet_ColorEnabled    },
    {    &VRPrinterClassData.vrGet_ColorEnabled,
         &somId_vrGet_ColorEnabled,
         &somDI_vrGet_ColorEnabled,
         (somMethodProc *) VRPrinterInstance_vrGet_ColorEnabled,
         (somMethodProc *) somRD_vrGet_ColorEnabled,
         (somMethodProc *) somAP_vrGet_ColorEnabled    },
    {    &VRPrinterClassData.vrSet_Measures,
         &somId_vrSet_Measures,
         &somDI_vrSet_Measures,
         (somMethodProc *) VRPrinterInstance_vrSet_Measures,
         (somMethodProc *) somRD_vrSet_Measures,
         (somMethodProc *) somAP_vrSet_Measures    },
    {    &VRPrinterClassData.vrGet_Measures,
         &somId_vrGet_Measures,
         &somDI_vrGet_Measures,
         (somMethodProc *) VRPrinterInstance_vrGet_Measures,
         (somMethodProc *) somRD_vrGet_Measures,
         (somMethodProc *) somAP_vrGet_Measures    },
    {    &VRPrinterClassData.vrGet_PageNum,
         &somId_vrGet_PageNum,
         &somDI_vrGet_PageNum,
         (somMethodProc *) VRPrinterInstance_vrGet_PageNum,
         (somMethodProc *) somRD_vrGet_PageNum,
         (somMethodProc *) somAP_vrGet_PageNum    },
    {    &VRPrinterClassData.vrGet_JobName,
         &somId_vrGet_JobName,
         &somDI_vrGet_JobName,
         (somMethodProc *) VRPrinterInstance_vrGet_JobName,
         (somMethodProc *) somRD_vrGet_JobName,
         (somMethodProc *) somAP_vrGet_JobName    },
    {    &VRPrinterClassData.vrGet_DefaultPrinter,
         &somId_vrGet_DefaultPrinter,
         &somDI_vrGet_DefaultPrinter,
         (somMethodProc *) VRPrinterInstance_vrGet_DefaultPrinter,
         (somMethodProc *) somRD_vrGet_DefaultPrinter,
         (somMethodProc *) somAP_vrGet_DefaultPrinter    },
    {    &VRPrinterClassData.vrGet_MinLeftMar,
         &somId_vrGet_MinLeftMar,
         &somDI_vrGet_MinLeftMar,
         (somMethodProc *) VRPrinterInstance_vrGet_MinLeftMar,
         (somMethodProc *) somRD_vrGet_MinLeftMar,
         (somMethodProc *) somAP_vrGet_MinLeftMar    },
    {    &VRPrinterClassData.vrGet_MinRightMar,
         &somId_vrGet_MinRightMar,
         &somDI_vrGet_MinRightMar,
         (somMethodProc *) VRPrinterInstance_vrGet_MinRightMar,
         (somMethodProc *) somRD_vrGet_MinRightMar,
         (somMethodProc *) somAP_vrGet_MinRightMar    },
    {    &VRPrinterClassData.vrGet_MinTopMar,
         &somId_vrGet_MinTopMar,
         &somDI_vrGet_MinTopMar,
         (somMethodProc *) VRPrinterInstance_vrGet_MinTopMar,
         (somMethodProc *) somRD_vrGet_MinTopMar,
         (somMethodProc *) somAP_vrGet_MinTopMar    },
    {    &VRPrinterClassData.vrGet_MinBottomMar,
         &somId_vrGet_MinBottomMar,
         &somDI_vrGet_MinBottomMar,
         (somMethodProc *) VRPrinterInstance_vrGet_MinBottomMar,
         (somMethodProc *) somRD_vrGet_MinBottomMar,
         (somMethodProc *) somAP_vrGet_MinBottomMar    },
    {    &VRPrinterClassData.vrGet_FormName,
         &somId_vrGet_FormName,
         &somDI_vrGet_FormName,
         (somMethodProc *) VRPrinterInstance_vrGet_FormName,
         (somMethodProc *) somRD_vrGet_FormName,
         (somMethodProc *) somAP_vrGet_FormName    },
    {    &VRPrinterClassData.vrGet_FormWidth,
         &somId_vrGet_FormWidth,
         &somDI_vrGet_FormWidth,
         (somMethodProc *) VRPrinterInstance_vrGet_FormWidth,
         (somMethodProc *) somRD_vrGet_FormWidth,
         (somMethodProc *) somAP_vrGet_FormWidth    },
    {    &VRPrinterClassData.vrGet_FormHeight,
         &somId_vrGet_FormHeight,
         &somDI_vrGet_FormHeight,
         (somMethodProc *) VRPrinterInstance_vrGet_FormHeight,
         (somMethodProc *) somRD_vrGet_FormHeight,
         (somMethodProc *) somAP_vrGet_FormHeight    },
    {    &VRPrinterClassData.vrSet_ShowProgress,
         &somId_vrSet_ShowProgress,
         &somDI_vrSet_ShowProgress,
         (somMethodProc *) VRPrinterInstance_vrSet_ShowProgress,
         (somMethodProc *) somRD_vrSet_ShowProgress,
         (somMethodProc *) somAP_vrSet_ShowProgress    },
    {    &VRPrinterClassData.vrGet_ShowProgress,
         &somId_vrGet_ShowProgress,
         &somDI_vrGet_ShowProgress,
         (somMethodProc *) VRPrinterInstance_vrGet_ShowProgress,
         (somMethodProc *) somRD_vrGet_ShowProgress,
         (somMethodProc *) somAP_vrGet_ShowProgress    },
    {    &VRPrinterClassData.vrGet_XPos,
         &somId_vrGet_XPos,
         &somDI_vrGet_XPos,
         (somMethodProc *) VRPrinterInstance_vrGet_XPos,
         (somMethodProc *) somRD_vrGet_XPos,
         (somMethodProc *) somAP_vrGet_XPos    },
    {    &VRPrinterClassData.vrGet_YPos,
         &somId_vrGet_YPos,
         &somDI_vrGet_YPos,
         (somMethodProc *) VRPrinterInstance_vrGet_YPos,
         (somMethodProc *) somRD_vrGet_YPos,
         (somMethodProc *) somAP_vrGet_YPos    },
    {    &VRPrinterClassData.vrGet_XposTwips,
         &somId_vrGet_XposTwips,
         &somDI_vrGet_XposTwips,
         (somMethodProc *) VRPrinterInstance_vrGet_XposTwips,
         (somMethodProc *) somRD_vrGet_XposTwips,
         (somMethodProc *) somAP_vrGet_XposTwips    },
    {    &VRPrinterClassData.vrGet_YposTwips,
         &somId_vrGet_YposTwips,
         &somDI_vrGet_YposTwips,
         (somMethodProc *) VRPrinterInstance_vrGet_YposTwips,
         (somMethodProc *) somRD_vrGet_YposTwips,
         (somMethodProc *) somAP_vrGet_YposTwips    },
    {    &VRPrinterClassData.vrRXMethod_ClosePrintJob,
         &somId_vrRXMethod_ClosePrintJob,
         &somDI_vrRXMethod_ClosePrintJob,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_ClosePrintJob,
         (somMethodProc *) somRD_vrRXMethod_ClosePrintJob,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_DefineTable,
         &somId_vrRXMethod_DefineTable,
         &somDI_vrRXMethod_DefineTable,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_DefineTable,
         (somMethodProc *) somRD_vrRXMethod_DefineTable,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_EndRow,
         &somId_vrRXMethod_EndRow,
         &somDI_vrRXMethod_EndRow,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_EndRow,
         (somMethodProc *) somRD_vrRXMethod_EndRow,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_EndTable,
         &somId_vrRXMethod_EndTable,
         &somDI_vrRXMethod_EndTable,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_EndTable,
         (somMethodProc *) somRD_vrRXMethod_EndTable,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_GoTo,
         &somId_vrRXMethod_GoTo,
         &somDI_vrRXMethod_GoTo,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_GoTo,
         (somMethodProc *) somRD_vrRXMethod_GoTo,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_JobProperties,
         &somId_vrRXMethod_JobProperties,
         &somDI_vrRXMethod_JobProperties,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_JobProperties,
         (somMethodProc *) somRD_vrRXMethod_JobProperties,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintJustified,
         &somId_vrRXMethod_PrintJustified,
         &somDI_vrRXMethod_PrintJustified,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintJustified,
         (somMethodProc *) somRD_vrRXMethod_PrintJustified,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintCentered,
         &somId_vrRXMethod_PrintCentered,
         &somDI_vrRXMethod_PrintCentered,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintCentered,
         (somMethodProc *) somRD_vrRXMethod_PrintCentered,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintRight,
         &somId_vrRXMethod_PrintRight,
         &somDI_vrRXMethod_PrintRight,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintRight,
         (somMethodProc *) somRD_vrRXMethod_PrintRight,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintLeft,
         &somId_vrRXMethod_PrintLeft,
         &somDI_vrRXMethod_PrintLeft,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintLeft,
         (somMethodProc *) somRD_vrRXMethod_PrintLeft,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintLine,
         &somId_vrRXMethod_PrintLine,
         &somDI_vrRXMethod_PrintLine,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintLine,
         (somMethodProc *) somRD_vrRXMethod_PrintLine,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintBox,
         &somId_vrRXMethod_PrintBox,
         &somDI_vrRXMethod_PrintBox,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintBox,
         (somMethodProc *) somRD_vrRXMethod_PrintBox,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintBitmap,
         &somId_vrRXMethod_PrintBitmap,
         &somDI_vrRXMethod_PrintBitmap,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintBitmap,
         (somMethodProc *) somRD_vrRXMethod_PrintBitmap,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintFile,
         &somId_vrRXMethod_PrintFile,
         &somDI_vrRXMethod_PrintFile,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintFile,
         (somMethodProc *) somRD_vrRXMethod_PrintFile,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_StartCol,
         &somId_vrRXMethod_StartCol,
         &somDI_vrRXMethod_StartCol,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_StartCol,
         (somMethodProc *) somRD_vrRXMethod_StartCol,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_StartRow,
         &somId_vrRXMethod_StartRow,
         &somDI_vrRXMethod_StartRow,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_StartRow,
         (somMethodProc *) somRD_vrRXMethod_StartRow,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_StartTable,
         &somId_vrRXMethod_StartTable,
         &somDI_vrRXMethod_StartTable,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_StartTable,
         (somMethodProc *) somRD_vrRXMethod_StartTable,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_SetHeader,
         &somId_vrRXMethod_SetHeader,
         &somDI_vrRXMethod_SetHeader,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_SetHeader,
         (somMethodProc *) somRD_vrRXMethod_SetHeader,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_SetHeaderMode,
         &somId_vrRXMethod_SetHeaderMode,
         &somDI_vrRXMethod_SetHeaderMode,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_SetHeaderMode,
         (somMethodProc *) somRD_vrRXMethod_SetHeaderMode,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_SetFooter,
         &somId_vrRXMethod_SetFooter,
         &somDI_vrRXMethod_SetFooter,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_SetFooter,
         (somMethodProc *) somRD_vrRXMethod_SetFooter,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_SetMargins,
         &somId_vrRXMethod_SetMargins,
         &somDI_vrRXMethod_SetMargins,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_SetMargins,
         (somMethodProc *) somRD_vrRXMethod_SetMargins,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_SetPrinter,
         &somId_vrRXMethod_SetPrinter,
         &somDI_vrRXMethod_SetPrinter,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_SetPrinter,
         (somMethodProc *) somRD_vrRXMethod_SetPrinter,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrinterDialog,
         &somId_vrRXMethod_PrinterDialog,
         &somDI_vrRXMethod_PrinterDialog,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrinterDialog,
         (somMethodProc *) somRD_vrRXMethod_PrinterDialog,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_FontDialog,
         &somId_vrRXMethod_FontDialog,
         &somDI_vrRXMethod_FontDialog,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_FontDialog,
         (somMethodProc *) somRD_vrRXMethod_FontDialog,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_OpenPrintJob,
         &somId_vrRXMethod_OpenPrintJob,
         &somDI_vrRXMethod_OpenPrintJob,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_OpenPrintJob,
         (somMethodProc *) somRD_vrRXMethod_OpenPrintJob,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_NewPage,
         &somId_vrRXMethod_NewPage,
         &somDI_vrRXMethod_NewPage,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_NewPage,
         (somMethodProc *) somRD_vrRXMethod_NewPage,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrinterList,
         &somId_vrRXMethod_PrinterList,
         &somDI_vrRXMethod_PrinterList,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrinterList,
         (somMethodProc *) somRD_vrRXMethod_PrinterList,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_Tab,
         &somId_vrRXMethod_Tab,
         &somDI_vrRXMethod_Tab,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_Tab,
         (somMethodProc *) somRD_vrRXMethod_Tab,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_SetHeaderLineFont,
         &somId_vrRXMethod_SetHeaderLineFont,
         &somDI_vrRXMethod_SetHeaderLineFont,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_SetHeaderLineFont,
         (somMethodProc *) somRD_vrRXMethod_SetHeaderLineFont,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintObjectImage,
         &somId_vrRXMethod_PrintObjectImage,
         &somDI_vrRXMethod_PrintObjectImage,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintObjectImage,
         (somMethodProc *) somRD_vrRXMethod_PrintObjectImage,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_ResetColHeader,
         &somId_vrRXMethod_ResetColHeader,
         &somDI_vrRXMethod_ResetColHeader,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_ResetColHeader,
         (somMethodProc *) somRD_vrRXMethod_ResetColHeader,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_ResetHeader,
         &somId_vrRXMethod_ResetHeader,
         &somDI_vrRXMethod_ResetHeader,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_ResetHeader,
         (somMethodProc *) somRD_vrRXMethod_ResetHeader,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_AbortPrintJob,
         &somId_vrRXMethod_AbortPrintJob,
         &somDI_vrRXMethod_AbortPrintJob,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_AbortPrintJob,
         (somMethodProc *) somRD_vrRXMethod_AbortPrintJob,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_BlockFits,
         &somId_vrRXMethod_BlockFits,
         &somDI_vrRXMethod_BlockFits,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_BlockFits,
         (somMethodProc *) somRD_vrRXMethod_BlockFits,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_LineFits,
         &somId_vrRXMethod_LineFits,
         &somDI_vrRXMethod_LineFits,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_LineFits,
         (somMethodProc *) somRD_vrRXMethod_LineFits,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_SetProgressTexts,
         &somId_vrRXMethod_SetProgressTexts,
         &somDI_vrRXMethod_SetProgressTexts,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_SetProgressTexts,
         (somMethodProc *) somRD_vrRXMethod_SetProgressTexts,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_MoveX,
         &somId_vrRXMethod_MoveX,
         &somDI_vrRXMethod_MoveX,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_MoveX,
         (somMethodProc *) somRD_vrRXMethod_MoveX,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_MoveY,
         &somId_vrRXMethod_MoveY,
         &somDI_vrRXMethod_MoveY,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_MoveY,
         (somMethodProc *) somRD_vrRXMethod_MoveY,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintWinImage,
         &somId_vrRXMethod_PrintWinImage,
         &somDI_vrRXMethod_PrintWinImage,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintWinImage,
         (somMethodProc *) somRD_vrRXMethod_PrintWinImage,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_LoadResMod,
         &somId_vrRXMethod_LoadResMod,
         &somDI_vrRXMethod_LoadResMod,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_LoadResMod,
         (somMethodProc *) somRD_vrRXMethod_LoadResMod,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_FreeResMod,
         &somId_vrRXMethod_FreeResMod,
         &somDI_vrRXMethod_FreeResMod,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_FreeResMod,
         (somMethodProc *) somRD_vrRXMethod_FreeResMod,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintJPEG,
         &somId_vrRXMethod_PrintJPEG,
         &somDI_vrRXMethod_PrintJPEG,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintJPEG,
         (somMethodProc *) somRD_vrRXMethod_PrintJPEG,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_StringLength,
         &somId_vrRXMethod_StringLength,
         &somDI_vrRXMethod_StringLength,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_StringLength,
         (somMethodProc *) somRD_vrRXMethod_StringLength,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_GotoX,
         &somId_vrRXMethod_GotoX,
         &somDI_vrRXMethod_GotoX,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_GotoX,
         (somMethodProc *) somRD_vrRXMethod_GotoX,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_GotoY,
         &somId_vrRXMethod_GotoY,
         &somDI_vrRXMethod_GotoY,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_GotoY,
         (somMethodProc *) somRD_vrRXMethod_GotoY,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_GotoTab,
         &somId_vrRXMethod_GotoTab,
         &somDI_vrRXMethod_GotoTab,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_GotoTab,
         (somMethodProc *) somRD_vrRXMethod_GotoTab,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_DrawLine,
         &somId_vrRXMethod_DrawLine,
         &somDI_vrRXMethod_DrawLine,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_DrawLine,
         (somMethodProc *) somRD_vrRXMethod_DrawLine,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_PrintBullet,
         &somId_vrRXMethod_PrintBullet,
         &somDI_vrRXMethod_PrintBullet,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_PrintBullet,
         (somMethodProc *) somRD_vrRXMethod_PrintBullet,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_SaveJobProps,
         &somId_vrRXMethod_SaveJobProps,
         &somDI_vrRXMethod_SaveJobProps,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_SaveJobProps,
         (somMethodProc *) somRD_vrRXMethod_SaveJobProps,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrRXMethod_ReadJobProps,
         &somId_vrRXMethod_ReadJobProps,
         &somDI_vrRXMethod_ReadJobProps,
         (somMethodProc *) VRPrinterInstance_vrRXMethod_ReadJobProps,
         (somMethodProc *) somRD_vrRXMethod_ReadJobProps,
         (somMethodProc *) VRPrinter_RXMethod_stub    },
    {    &VRPrinterClassData.vrWM_INITCAP,
         &somId_vrWM_INITCAP,
         &somDI_vrWM_INITCAP,
         (somMethodProc *) VRPrinterInstance_vrWM_INITCAP,
         (somMethodProc *) somRD_vrWM_INITCAP,
         (somMethodProc *) VRPrinter_WM_stub    },
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t VRPrinterOM[] = {
    {    &somId_somInit,
         (somMethodProc *) VRPrinterInstance_somInit    },
    {    &somId_somUninit,
         (somMethodProc *) VRPrinterInstance_somUninit    },
    {    &somId_vrLocalCreateWindow,
         (somMethodProc *) VRPrinterInstance_vrLocalCreateWindow    },
    {    &somId_vrSet_WordBreak,
         (somMethodProc *) VRPrinterInstance_vrSet_WordBreak    },
    {    &somId_vrGet_WordBreak,
         (somMethodProc *) VRPrinterInstance_vrGet_WordBreak    },
};

static void VRPrintersomInitializeClass ()
{
    int i;
    somStaticMethod_t *smp;
    somOverrideMethod_t *omp;

/*
 * Add the Static Methods.
 */
    for (smp = VRPrinterSM, i = 0; i < 89; smp++, i++)
        *(smp->classData) =
            _somAddStaticMethod (VRPrintertempClassData.classObject,
                *(smp->methodId), *(smp->methodDescriptor),
                smp->method, smp->redispatchStub,
                smp->applyStub);


/*
 * Override methods.
 */
    for (omp = VRPrinterOM, i = 0; i < 5; omp++, i++)
        _somOverrideSMethod (VRPrintertempClassData.classObject,
            *(omp->methodId), omp->method);

}

#pragma linkage(VRPrintersomCreateClass, system)
static void SOMLINK VRPrintersomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    VRPrintertempClassData.classObject = _somNew (mClsObj);
    _somInitClass (VRPrintertempClassData.classObject,
        "VRPrinter",
        pClsObj,
        sizeof(VRPrinterData),
        VRPrinter_MaxNoMethods,
        VRPrinter_MajorVersion,
        VRPrinter_MinorVersion);
    VRPrinterCClassData.instanceDataToken = 
    _somGetInstanceToken(VRPrintertempClassData.classObject);
    VRPrintersomInitializeClass();
    VRPrinterCClassData.parentMtab =
    _somGetPClsMtab(VRPrintertempClassData.classObject);
    _somSetClassData(VRPrintertempClassData.classObject, (somClassDataStructure *)&VRPrinterClassData);
    _somClassReady(VRPrintertempClassData.classObject);
    /* make newly created class object visible */
    VRPrinterClassData.classObject = VRPrintertempClassData.classObject;
}

VRPrinter * SOMLINK VRPrinterNewClass (integer4 scemajorVersion,
        integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != VRPrinter_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > VRPrinter_MinorVersion))) {
    somPrintf("VRPrinterNewClass: Error, bad version numbers.\n");
    SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (VRPrinterClassData.classObject != (SOMAny *) NULL)
    return(VRPrinterClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
    SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    VRDescriptiveTextNewClass(1,1); /* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
        SOM_IdFromString("VRDescriptiveText"), 1, 1);
    if (pClsObj == (SOMClass *) NULL)
    SOM_Error(SOMERROR_NoParentClass);

    /* Explicit metaclass, so get it */ 
    M_VRPrinterNewClass(0,0);   /* static reference */
    mClsObj = _somFindClass(SOMClassMgrObject,
        SOM_IdFromString("M_VRPrinter"), 0, 0);
    if (mClsObj == (SOMClass *) NULL)
    SOM_Error(SOMERROR_NoMetaClass);

    somConstructClass(VRPrintersomCreateClass, pClsObj, mClsObj,
             &VRPrintertempClassData);
    return (VRPrinterClassData.classObject);
}

#endif                   /* VRPrinter_Class_Source */

#endif       /* printer_ih */

/*
 * This file was generated by the SOM Compiler.
 * FileName: printer.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef printer_mih
#define printer_mih


/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

#ifndef SOM_CurrentClass
#define SOM_CurrentClass M_VRPrinterCClassData.parentMtab
#endif

#define M_VRPrinter_MaxNoMethods 1

/*
 * Instance data
 */
typedef void M_VRPrinterData;

/*
 * Trace/Debug macro
 */
#ifndef M_VRPrinterMethodDebug
#define M_VRPrinterMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef M_VRPrinter_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Generate the Apply Stubs.
 */
#pragma linkage(somAP_vrShowHelp, system)
static bool   SOMLINK somAP_vrShowHelp(M_VRPrinter *somSelf,
        somId __id,
        somId __desc,
        va_list __ap)
{
    HWND root_frame = va_arg(__ap, HWND);

    return (M_VRPrinter_vrShowHelp(somSelf,root_frame));
}


/*
 * Overridden method: vrLocalClassInit
 */
#pragma linkage(VRPrinterClass_vrLocalClassInit, system)
SOM_Scope bool   SOMLINK VRPrinterClass_vrLocalClassInit(M_VRPrinter *somSelf);
#ifndef parent_vrLocalClassInit
static char *somMN_vrLocalClassInit = "vrLocalClassInit";
static somId somId_vrLocalClassInit = &somMN_vrLocalClassInit;
#define parent_vrLocalClassInit(somSelf) \
    ((SOM_ParentResolveE(M_VRCore, SOM_CurrentClass, vrLocalClassInit)) \
     (somSelf))
#endif
#define M_VRPrinterParent_vrLocalClassInit parent_vrLocalClassInit

/*
 * Overridden method: vrLocalWindowClassInit
 */
#pragma linkage(VRPrinterClass_vrLocalWindowClassInit, system)
SOM_Scope bool   SOMLINK VRPrinterClass_vrLocalWindowClassInit(M_VRPrinter *somSelf);
#ifndef parent_vrLocalWindowClassInit
static char *somMN_vrLocalWindowClassInit = "vrLocalWindowClassInit";
static somId somId_vrLocalWindowClassInit = &somMN_vrLocalWindowClassInit;
#define parent_vrLocalWindowClassInit(somSelf) \
    ((SOM_ParentResolveE(M_VRCore, SOM_CurrentClass, vrLocalWindowClassInit)) \
     (somSelf))
#endif
#define M_VRPrinterParent_vrLocalWindowClassInit parent_vrLocalWindowClassInit

/*
 * Overridden method: somInit
 */
#pragma linkage(VRPrinterClass_somInit, system)
SOM_Scope void   SOMLINK VRPrinterClass_somInit(M_VRPrinter *somSelf);
#ifndef parent_somInit
static char *somMN_somInit = "somInit";
static somId somId_somInit = &somMN_somInit;
#define parent_somInit(somSelf) \
    ((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somInit)) \
     (somSelf))
#endif
#define M_VRPrinterParent_somInit parent_somInit

/*
 * Overridden method: somUninit
 */
#pragma linkage(VRPrinterClass_somUninit, system)
SOM_Scope void   SOMLINK VRPrinterClass_somUninit(M_VRPrinter *somSelf);
#ifndef parent_somUninit
static char *somMN_somUninit = "somUninit";
static somId somId_somUninit = &somMN_somUninit;
#define parent_somUninit(somSelf) \
    ((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somUninit)) \
     (somSelf))
#endif
#define M_VRPrinterParent_somUninit parent_somUninit

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure M_VRPrintertempClassData;

/*
 * Initialize the class data structure
 */
struct M_VRPrinterClassDataStructure M_VRPrinterClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct M_VRPrinterCClassDataStructure M_VRPrinterCClassData = {(somMethodTab *) NULL};

/*
 * New Method: vrShowHelp
 */
#pragma linkage(VRPrinterClass_vrShowHelp, system)
SOM_Scope bool   SOMLINK VRPrinterClass_vrShowHelp(M_VRPrinter *somSelf,
        HWND root_frame);
static char *somMN_vrShowHelp = "vrShowHelp";
static somId somId_vrShowHelp = &somMN_vrShowHelp;
static char *somDS_vrShowHelp = somMD_M_VRPrinter_vrShowHelp;
static somId somDI_vrShowHelp = &somDS_vrShowHelp;
#pragma linkage(somRD_vrShowHelp, system)
static bool   SOMLINK somRD_vrShowHelp(M_VRPrinter *somSelf,
        HWND root_frame)
{
    return ((bool) va_somDispatchL(somSelf, somId_vrShowHelp,
        _somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrShowHelp),root_frame));
}

/*
 * Routines to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t M_VRPrinterSM[] = {
    {    &M_VRPrinterClassData.vrShowHelp,
         &somId_vrShowHelp,
         &somDI_vrShowHelp,
         (somMethodProc *) VRPrinterClass_vrShowHelp,
         (somMethodProc *) somRD_vrShowHelp,
         (somMethodProc *) somAP_vrShowHelp    },
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_VRPrinterOM[] = {
    {    &somId_vrLocalClassInit,
         (somMethodProc *) VRPrinterClass_vrLocalClassInit    },
    {    &somId_vrLocalWindowClassInit,
         (somMethodProc *) VRPrinterClass_vrLocalWindowClassInit    },
    {    &somId_somInit,
         (somMethodProc *) VRPrinterClass_somInit    },
    {    &somId_somUninit,
         (somMethodProc *) VRPrinterClass_somUninit    },
};

static void M_VRPrintersomInitializeClass ()
{
    int i;
    somStaticMethod_t *smp;
    somOverrideMethod_t *omp;

/*
 * Add the Static Methods.
 */
    for (smp = M_VRPrinterSM, i = 0; i < 1; smp++, i++)
        *(smp->classData) =
            _somAddStaticMethod (M_VRPrintertempClassData.classObject,
                *(smp->methodId), *(smp->methodDescriptor),
                smp->method, smp->redispatchStub,
                smp->applyStub);


/*
 * Override methods.
 */
    for (omp = M_VRPrinterOM, i = 0; i < 4; omp++, i++)
        _somOverrideSMethod (M_VRPrintertempClassData.classObject,
            *(omp->methodId), omp->method);

}

#pragma linkage(M_VRPrintersomCreateClass, system)
static void SOMLINK M_VRPrintersomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    M_VRPrintertempClassData.classObject = _somNew (mClsObj);
    _somInitClass (M_VRPrintertempClassData.classObject,
        "M_VRPrinter",
        pClsObj,
        0,
        M_VRPrinter_MaxNoMethods,
        M_VRPrinter_MajorVersion,
        M_VRPrinter_MinorVersion);
    M_VRPrinterCClassData.instanceDataToken = 
    _somGetInstanceToken(M_VRPrintertempClassData.classObject);
    M_VRPrintersomInitializeClass();
    M_VRPrinterCClassData.parentMtab =
    _somGetPClsMtab(M_VRPrintertempClassData.classObject);
    _somSetClassData(M_VRPrintertempClassData.classObject, (somClassDataStructure *)&M_VRPrinterClassData);
    _somClassReady(M_VRPrintertempClassData.classObject);
    /* make newly created class object visible */
    M_VRPrinterClassData.classObject = M_VRPrintertempClassData.classObject;
}

M_VRPrinter * SOMLINK M_VRPrinterNewClass (integer4 scemajorVersion,
        integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != M_VRPrinter_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > M_VRPrinter_MinorVersion))) {
    somPrintf("M_VRPrinterNewClass: Error, bad version numbers.\n");
    SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (M_VRPrinterClassData.classObject != (SOMAny *) NULL)
    return(M_VRPrinterClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
    SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    M_VRDescriptiveTextNewClass(1,1);   /* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
        SOM_IdFromString("M_VRDescriptiveText"), 1, 1);
    if (pClsObj == (SOMClass *) NULL)
    SOM_Error(SOMERROR_NoParentClass);

    /* Use parent's metaclass */ 
    mClsObj = SOM_GetClass(pClsObj);

    somConstructClass(M_VRPrintersomCreateClass, pClsObj, mClsObj,
             &M_VRPrintertempClassData);
    return (M_VRPrinterClassData.classObject);
}

#endif                   /* M_VRPrinter_Class_Source */

#endif       /* printer_ih */
